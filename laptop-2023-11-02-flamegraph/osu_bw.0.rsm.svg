<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="438" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="421.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="421.00"> </text><svg id="frames" x="10" width="1180" total_samples="16363"><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.01%)</title><rect x="0.0183%" y="293" width="0.0122%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="2"/><text x="0.2683%" y="303.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.01%)</title><rect x="0.0183%" y="277" width="0.0122%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="2"/><text x="0.2683%" y="287.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.02%)</title><rect x="0.0183%" y="325" width="0.0183%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="3"/><text x="0.2683%" y="335.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.02%)</title><rect x="0.0183%" y="309" width="0.0183%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="3"/><text x="0.2683%" y="319.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 0.05%)</title><rect x="0.0061%" y="341" width="0.0489%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="8"/><text x="0.2561%" y="351.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="0.0367%" y="325" width="0.0183%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="3"/><text x="0.2867%" y="335.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="0.0367%" y="309" width="0.0183%" height="15" fill="rgb(207,160,47)" fg:x="6" fg:w="3"/><text x="0.2867%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.0428%" y="293" width="0.0122%" height="15" fill="rgb(228,23,34)" fg:x="7" fg:w="2"/><text x="0.2928%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.0428%" y="277" width="0.0122%" height="15" fill="rgb(218,30,26)" fg:x="7" fg:w="2"/><text x="0.2928%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.0428%" y="261" width="0.0122%" height="15" fill="rgb(220,122,19)" fg:x="7" fg:w="2"/><text x="0.2928%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.0428%" y="245" width="0.0122%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="2"/><text x="0.2928%" y="255.50"></text></g><g><title>[ld-linux-x86-64.so.2] (9 samples, 0.06%)</title><rect x="0.0061%" y="357" width="0.0550%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="9"/><text x="0.2561%" y="367.50"></text></g><g><title>[libpmix.so.2.9.2] (3 samples, 0.02%)</title><rect x="0.0794%" y="277" width="0.0183%" height="15" fill="rgb(216,20,37)" fg:x="13" fg:w="3"/><text x="0.3294%" y="287.50"></text></g><g><title>[libpmix.so.2.9.2] (3 samples, 0.02%)</title><rect x="0.0794%" y="261" width="0.0183%" height="15" fill="rgb(206,188,39)" fg:x="13" fg:w="3"/><text x="0.3294%" y="271.50"></text></g><g><title>[libpmix.so.2.9.2] (7 samples, 0.04%)</title><rect x="0.0611%" y="325" width="0.0428%" height="15" fill="rgb(217,207,13)" fg:x="10" fg:w="7"/><text x="0.3111%" y="335.50"></text></g><g><title>event_base_loop (7 samples, 0.04%)</title><rect x="0.0611%" y="309" width="0.0428%" height="15" fill="rgb(231,73,38)" fg:x="10" fg:w="7"/><text x="0.3111%" y="319.50"></text></g><g><title>[libevent_core-2.1.so.7.0.1] (6 samples, 0.04%)</title><rect x="0.0672%" y="293" width="0.0367%" height="15" fill="rgb(225,20,46)" fg:x="11" fg:w="6"/><text x="0.3172%" y="303.50"></text></g><g><title>[libc.so.6] (9 samples, 0.06%)</title><rect x="0.0611%" y="357" width="0.0550%" height="15" fill="rgb(210,31,41)" fg:x="10" fg:w="9"/><text x="0.3111%" y="367.50"></text></g><g><title>[libc.so.6] (9 samples, 0.06%)</title><rect x="0.0611%" y="341" width="0.0550%" height="15" fill="rgb(221,200,47)" fg:x="10" fg:w="9"/><text x="0.3111%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.1039%" y="325" width="0.0122%" height="15" fill="rgb(226,26,5)" fg:x="17" fg:w="2"/><text x="0.3539%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.1039%" y="309" width="0.0122%" height="15" fill="rgb(249,33,26)" fg:x="17" fg:w="2"/><text x="0.3539%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.1039%" y="293" width="0.0122%" height="15" fill="rgb(235,183,28)" fg:x="17" fg:w="2"/><text x="0.3539%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.1222%" y="357" width="0.0122%" height="15" fill="rgb(221,5,38)" fg:x="20" fg:w="2"/><text x="0.3722%" y="367.50"></text></g><g><title>MPI_Barrier (2 samples, 0.01%)</title><rect x="0.1406%" y="293" width="0.0122%" height="15" fill="rgb(247,18,42)" fg:x="23" fg:w="2"/><text x="0.3906%" y="303.50"></text></g><g><title>ompi_coll_base_barrier_intra_recursivedoubling (2 samples, 0.01%)</title><rect x="0.1406%" y="277" width="0.0122%" height="15" fill="rgb(241,131,45)" fg:x="23" fg:w="2"/><text x="0.3906%" y="287.50"></text></g><g><title>ompi_request_default_wait (2 samples, 0.01%)</title><rect x="0.1406%" y="261" width="0.0122%" height="15" fill="rgb(249,31,29)" fg:x="23" fg:w="2"/><text x="0.3906%" y="271.50"></text></g><g><title>opal_progress (2 samples, 0.01%)</title><rect x="0.1406%" y="245" width="0.0122%" height="15" fill="rgb(225,111,53)" fg:x="23" fg:w="2"/><text x="0.3906%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rsm::local_data::LocalData&gt;&gt; (4 samples, 0.02%)</title><rect x="0.3483%" y="213" width="0.0244%" height="15" fill="rgb(238,160,17)" fg:x="57" fg:w="4"/><text x="0.5983%" y="223.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="0.3483%" y="197" width="0.0244%" height="15" fill="rgb(214,148,48)" fg:x="57" fg:w="4"/><text x="0.5983%" y="207.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (4 samples, 0.02%)</title><rect x="0.3483%" y="181" width="0.0244%" height="15" fill="rgb(232,36,49)" fg:x="57" fg:w="4"/><text x="0.5983%" y="191.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (3 samples, 0.02%)</title><rect x="0.3728%" y="197" width="0.0183%" height="15" fill="rgb(209,103,24)" fg:x="61" fg:w="3"/><text x="0.6228%" y="207.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (3 samples, 0.02%)</title><rect x="0.3728%" y="181" width="0.0183%" height="15" fill="rgb(229,88,8)" fg:x="61" fg:w="3"/><text x="0.6228%" y="191.50"></text></g><g><title>core::cell::BorrowRefMut::new (3 samples, 0.02%)</title><rect x="0.3728%" y="165" width="0.0183%" height="15" fill="rgb(213,181,19)" fg:x="61" fg:w="3"/><text x="0.6228%" y="175.50"></text></g><g><title>core::sync::atomic::AtomicI64::swap (8 samples, 0.05%)</title><rect x="0.4156%" y="149" width="0.0489%" height="15" fill="rgb(254,191,54)" fg:x="68" fg:w="8"/><text x="0.6656%" y="159.50"></text></g><g><title>core::sync::atomic::atomic_swap (8 samples, 0.05%)</title><rect x="0.4156%" y="133" width="0.0489%" height="15" fill="rgb(241,83,37)" fg:x="68" fg:w="8"/><text x="0.6656%" y="143.50"></text></g><g><title>rsm::fifo::FIFO::push (12 samples, 0.07%)</title><rect x="0.3972%" y="197" width="0.0733%" height="15" fill="rgb(233,36,39)" fg:x="65" fg:w="12"/><text x="0.6472%" y="207.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (12 samples, 0.07%)</title><rect x="0.3972%" y="181" width="0.0733%" height="15" fill="rgb(226,3,54)" fg:x="65" fg:w="12"/><text x="0.6472%" y="191.50"></text></g><g><title>rsm::fifo::FIFO::push::_{{closure}} (12 samples, 0.07%)</title><rect x="0.3972%" y="165" width="0.0733%" height="15" fill="rgb(245,192,40)" fg:x="65" fg:w="12"/><text x="0.6472%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="0.5072%" y="149" width="0.0122%" height="15" fill="rgb(238,167,29)" fg:x="83" fg:w="2"/><text x="0.7572%" y="159.50"></text></g><g><title>[libc.so.6] (2 samples, 0.01%)</title><rect x="0.5072%" y="133" width="0.0122%" height="15" fill="rgb(232,182,51)" fg:x="83" fg:w="2"/><text x="0.7572%" y="143.50"></text></g><g><title>mca_pml_ob1_send_inline.isra.0 (38 samples, 0.23%)</title><rect x="0.2933%" y="261" width="0.2322%" height="15" fill="rgb(231,60,39)" fg:x="48" fg:w="38"/><text x="0.5433%" y="271.50"></text></g><g><title>mca_btl_rsm_sendi (30 samples, 0.18%)</title><rect x="0.3422%" y="245" width="0.1833%" height="15" fill="rgb(208,69,12)" fg:x="56" fg:w="30"/><text x="0.5922%" y="255.50"></text></g><g><title>rsm::local_data::lock (30 samples, 0.18%)</title><rect x="0.3422%" y="229" width="0.1833%" height="15" fill="rgb(235,93,37)" fg:x="56" fg:w="30"/><text x="0.5922%" y="239.50"></text></g><g><title>rsm::module::mca_btl_rsm_sendi::_{{closure}} (25 samples, 0.15%)</title><rect x="0.3728%" y="213" width="0.1528%" height="15" fill="rgb(213,116,39)" fg:x="61" fg:w="25"/><text x="0.6228%" y="223.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (9 samples, 0.06%)</title><rect x="0.4706%" y="197" width="0.0550%" height="15" fill="rgb(222,207,29)" fg:x="77" fg:w="9"/><text x="0.7206%" y="207.50"></text></g><g><title>rsm::module::mca_btl_rsm_sendi::_{{closure}}::_{{closure}} (8 samples, 0.05%)</title><rect x="0.4767%" y="181" width="0.0489%" height="15" fill="rgb(206,96,30)" fg:x="78" fg:w="8"/><text x="0.7267%" y="191.50"></text></g><g><title>rsm::shared::Block::fill (4 samples, 0.02%)</title><rect x="0.5011%" y="165" width="0.0244%" height="15" fill="rgb(218,138,4)" fg:x="82" fg:w="4"/><text x="0.7511%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.04%)</title><rect x="0.6050%" y="117" width="0.0367%" height="15" fill="rgb(250,191,14)" fg:x="99" fg:w="6"/><text x="0.8550%" y="127.50"></text></g><g><title>[libc.so.6] (6 samples, 0.04%)</title><rect x="0.6050%" y="101" width="0.0367%" height="15" fill="rgb(239,60,40)" fg:x="99" fg:w="6"/><text x="0.8550%" y="111.50"></text></g><g><title>mca_btl_rsm_prepare_src (9 samples, 0.06%)</title><rect x="0.5928%" y="229" width="0.0550%" height="15" fill="rgb(206,27,48)" fg:x="97" fg:w="9"/><text x="0.8428%" y="239.50"></text></g><g><title>rsm::local_data::lock (7 samples, 0.04%)</title><rect x="0.6050%" y="213" width="0.0428%" height="15" fill="rgb(225,35,8)" fg:x="99" fg:w="7"/><text x="0.8550%" y="223.50"></text></g><g><title>rsm::module::mca_btl_rsm_prepare_src::_{{closure}} (7 samples, 0.04%)</title><rect x="0.6050%" y="197" width="0.0428%" height="15" fill="rgb(250,213,24)" fg:x="99" fg:w="7"/><text x="0.8550%" y="207.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (7 samples, 0.04%)</title><rect x="0.6050%" y="181" width="0.0428%" height="15" fill="rgb(247,123,22)" fg:x="99" fg:w="7"/><text x="0.8550%" y="191.50"></text></g><g><title>rsm::module::mca_btl_rsm_prepare_src::_{{closure}}::_{{closure}} (7 samples, 0.04%)</title><rect x="0.6050%" y="165" width="0.0428%" height="15" fill="rgb(231,138,38)" fg:x="99" fg:w="7"/><text x="0.8550%" y="175.50"></text></g><g><title>rsm::shared::Block::prepare_fill (7 samples, 0.04%)</title><rect x="0.6050%" y="149" width="0.0428%" height="15" fill="rgb(231,145,46)" fg:x="99" fg:w="7"/><text x="0.8550%" y="159.50"></text></g><g><title>rsm::shared::convert_data (7 samples, 0.04%)</title><rect x="0.6050%" y="133" width="0.0428%" height="15" fill="rgb(251,118,11)" fg:x="99" fg:w="7"/><text x="0.8550%" y="143.50"></text></g><g><title>mca_pml_ob1_send_request_start_prepare (18 samples, 0.11%)</title><rect x="0.5622%" y="245" width="0.1100%" height="15" fill="rgb(217,147,25)" fg:x="92" fg:w="18"/><text x="0.8122%" y="255.50"></text></g><g><title>mca_btl_rsm_send (4 samples, 0.02%)</title><rect x="0.6478%" y="229" width="0.0244%" height="15" fill="rgb(247,81,37)" fg:x="106" fg:w="4"/><text x="0.8978%" y="239.50"></text></g><g><title>rsm::local_data::lock (4 samples, 0.02%)</title><rect x="0.6478%" y="213" width="0.0244%" height="15" fill="rgb(209,12,38)" fg:x="106" fg:w="4"/><text x="0.8978%" y="223.50"></text></g><g><title>rsm::module::mca_btl_rsm_send::_{{closure}} (4 samples, 0.02%)</title><rect x="0.6478%" y="197" width="0.0244%" height="15" fill="rgb(227,1,9)" fg:x="106" fg:w="4"/><text x="0.8978%" y="207.50"></text></g><g><title>rsm::fifo::FIFO::push (4 samples, 0.02%)</title><rect x="0.6478%" y="181" width="0.0244%" height="15" fill="rgb(248,47,43)" fg:x="106" fg:w="4"/><text x="0.8978%" y="191.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (4 samples, 0.02%)</title><rect x="0.6478%" y="165" width="0.0244%" height="15" fill="rgb(221,10,30)" fg:x="106" fg:w="4"/><text x="0.8978%" y="175.50"></text></g><g><title>rsm::fifo::FIFO::push::_{{closure}} (4 samples, 0.02%)</title><rect x="0.6478%" y="149" width="0.0244%" height="15" fill="rgb(210,229,1)" fg:x="106" fg:w="4"/><text x="0.8978%" y="159.50"></text></g><g><title>core::sync::atomic::AtomicI64::swap (4 samples, 0.02%)</title><rect x="0.6478%" y="133" width="0.0244%" height="15" fill="rgb(222,148,37)" fg:x="106" fg:w="4"/><text x="0.8978%" y="143.50"></text></g><g><title>core::sync::atomic::atomic_swap (4 samples, 0.02%)</title><rect x="0.6478%" y="117" width="0.0244%" height="15" fill="rgb(234,67,33)" fg:x="106" fg:w="4"/><text x="0.8978%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rsm::local_data::LocalData&gt;&gt; (2 samples, 0.01%)</title><rect x="0.7334%" y="197" width="0.0122%" height="15" fill="rgb(247,98,35)" fg:x="120" fg:w="2"/><text x="0.9834%" y="207.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="0.7334%" y="181" width="0.0122%" height="15" fill="rgb(247,138,52)" fg:x="120" fg:w="2"/><text x="0.9834%" y="191.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (2 samples, 0.01%)</title><rect x="0.7334%" y="165" width="0.0122%" height="15" fill="rgb(213,79,30)" fg:x="120" fg:w="2"/><text x="0.9834%" y="175.50"></text></g><g><title>rsm::shared::SharedRegionMap::init_descriptor (6 samples, 0.04%)</title><rect x="0.7456%" y="181" width="0.0367%" height="15" fill="rgb(246,177,23)" fg:x="122" fg:w="6"/><text x="0.9956%" y="191.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (4 samples, 0.02%)</title><rect x="0.7578%" y="165" width="0.0244%" height="15" fill="rgb(230,62,27)" fg:x="124" fg:w="4"/><text x="1.0078%" y="175.50"></text></g><g><title>rsm::shared::SharedRegionMap::init_descriptor::_{{closure}} (4 samples, 0.02%)</title><rect x="0.7578%" y="149" width="0.0244%" height="15" fill="rgb(216,154,8)" fg:x="124" fg:w="4"/><text x="1.0078%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (181 samples, 1.11%)</title><rect x="0.7945%" y="117" width="1.1062%" height="15" fill="rgb(244,35,45)" fg:x="130" fg:w="181"/><text x="1.0445%" y="127.50"></text></g><g><title>[libc.so.6] (181 samples, 1.11%)</title><rect x="0.7945%" y="101" width="1.1062%" height="15" fill="rgb(251,115,12)" fg:x="130" fg:w="181"/><text x="1.0445%" y="111.50"></text></g><g><title>mca_btl_rsm_prepare_src (194 samples, 1.19%)</title><rect x="0.7273%" y="229" width="1.1856%" height="15" fill="rgb(240,54,50)" fg:x="119" fg:w="194"/><text x="0.9773%" y="239.50"></text></g><g><title>rsm::local_data::lock (194 samples, 1.19%)</title><rect x="0.7273%" y="213" width="1.1856%" height="15" fill="rgb(233,84,52)" fg:x="119" fg:w="194"/><text x="0.9773%" y="223.50"></text></g><g><title>rsm::module::mca_btl_rsm_prepare_src::_{{closure}} (191 samples, 1.17%)</title><rect x="0.7456%" y="197" width="1.1673%" height="15" fill="rgb(207,117,47)" fg:x="122" fg:w="191"/><text x="0.9956%" y="207.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (185 samples, 1.13%)</title><rect x="0.7823%" y="181" width="1.1306%" height="15" fill="rgb(249,43,39)" fg:x="128" fg:w="185"/><text x="1.0323%" y="191.50"></text></g><g><title>rsm::module::mca_btl_rsm_prepare_src::_{{closure}}::_{{closure}} (185 samples, 1.13%)</title><rect x="0.7823%" y="165" width="1.1306%" height="15" fill="rgb(209,38,44)" fg:x="128" fg:w="185"/><text x="1.0323%" y="175.50"></text></g><g><title>rsm::shared::Block::prepare_fill (185 samples, 1.13%)</title><rect x="0.7823%" y="149" width="1.1306%" height="15" fill="rgb(236,212,23)" fg:x="128" fg:w="185"/><text x="1.0323%" y="159.50"></text></g><g><title>rsm::shared::convert_data (184 samples, 1.12%)</title><rect x="0.7884%" y="133" width="1.1245%" height="15" fill="rgb(242,79,21)" fg:x="129" fg:w="184"/><text x="1.0384%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rsm::local_data::LocalData&gt;&gt; (4 samples, 0.02%)</title><rect x="1.9129%" y="197" width="0.0244%" height="15" fill="rgb(211,96,35)" fg:x="313" fg:w="4"/><text x="2.1629%" y="207.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="1.9129%" y="181" width="0.0244%" height="15" fill="rgb(253,215,40)" fg:x="313" fg:w="4"/><text x="2.1629%" y="191.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (4 samples, 0.02%)</title><rect x="1.9129%" y="165" width="0.0244%" height="15" fill="rgb(211,81,21)" fg:x="313" fg:w="4"/><text x="2.1629%" y="175.50"></text></g><g><title>core::sync::atomic::AtomicI64::swap (13 samples, 0.08%)</title><rect x="1.9556%" y="133" width="0.0794%" height="15" fill="rgb(208,190,38)" fg:x="320" fg:w="13"/><text x="2.2056%" y="143.50"></text></g><g><title>core::sync::atomic::atomic_swap (13 samples, 0.08%)</title><rect x="1.9556%" y="117" width="0.0794%" height="15" fill="rgb(235,213,38)" fg:x="320" fg:w="13"/><text x="2.2056%" y="127.50"></text></g><g><title>rsm::module::mca_btl_rsm_send::_{{closure}} (17 samples, 0.10%)</title><rect x="1.9373%" y="197" width="0.1039%" height="15" fill="rgb(237,122,38)" fg:x="317" fg:w="17"/><text x="2.1873%" y="207.50"></text></g><g><title>rsm::fifo::FIFO::push (17 samples, 0.10%)</title><rect x="1.9373%" y="181" width="0.1039%" height="15" fill="rgb(244,218,35)" fg:x="317" fg:w="17"/><text x="2.1873%" y="191.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (17 samples, 0.10%)</title><rect x="1.9373%" y="165" width="0.1039%" height="15" fill="rgb(240,68,47)" fg:x="317" fg:w="17"/><text x="2.1873%" y="175.50"></text></g><g><title>rsm::fifo::FIFO::push::_{{closure}} (17 samples, 0.10%)</title><rect x="1.9373%" y="149" width="0.1039%" height="15" fill="rgb(210,16,53)" fg:x="317" fg:w="17"/><text x="2.1873%" y="159.50"></text></g><g><title>mca_pml_ob1_send_request_start_seq.constprop.0 (249 samples, 1.52%)</title><rect x="0.5256%" y="261" width="1.5217%" height="15" fill="rgb(235,124,12)" fg:x="86" fg:w="249"/><text x="0.7756%" y="271.50"></text></g><g><title>mca_pml_ob1_send_request_start_rndv (225 samples, 1.38%)</title><rect x="0.6722%" y="245" width="1.3751%" height="15" fill="rgb(224,169,11)" fg:x="110" fg:w="225"/><text x="0.9222%" y="255.50"></text></g><g><title>mca_btl_rsm_send (22 samples, 0.13%)</title><rect x="1.9129%" y="229" width="0.1344%" height="15" fill="rgb(250,166,2)" fg:x="313" fg:w="22"/><text x="2.1629%" y="239.50"></text></g><g><title>rsm::local_data::lock (22 samples, 0.13%)</title><rect x="1.9129%" y="213" width="0.1344%" height="15" fill="rgb(242,216,29)" fg:x="313" fg:w="22"/><text x="2.1629%" y="223.50"></text></g><g><title>MPI_Isend (317 samples, 1.94%)</title><rect x="0.1528%" y="293" width="1.9373%" height="15" fill="rgb(230,116,27)" fg:x="25" fg:w="317"/><text x="0.4028%" y="303.50">M..</text></g><g><title>mca_pml_ob1_isend (310 samples, 1.89%)</title><rect x="0.1956%" y="277" width="1.8945%" height="15" fill="rgb(228,99,48)" fg:x="32" fg:w="310"/><text x="0.4456%" y="287.50">m..</text></g><g><title>opal_convertor_prepare_for_send (7 samples, 0.04%)</title><rect x="2.0473%" y="261" width="0.0428%" height="15" fill="rgb(253,11,6)" fg:x="335" fg:w="7"/><text x="2.2973%" y="271.50"></text></g><g><title>accelerator_null_check_addr (2 samples, 0.01%)</title><rect x="2.0779%" y="245" width="0.0122%" height="15" fill="rgb(247,143,39)" fg:x="340" fg:w="2"/><text x="2.3279%" y="255.50"></text></g><g><title>mca_pml_ob1_send_request_free (4 samples, 0.02%)</title><rect x="2.1206%" y="261" width="0.0244%" height="15" fill="rgb(236,97,10)" fg:x="347" fg:w="4"/><text x="2.3706%" y="271.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="3.0618%" y="181" width="0.0122%" height="15" fill="rgb(233,208,19)" fg:x="501" fg:w="2"/><text x="3.3118%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (8 samples, 0.05%)</title><rect x="3.0618%" y="213" width="0.0489%" height="15" fill="rgb(216,164,2)" fg:x="501" fg:w="8"/><text x="3.3118%" y="223.50"></text></g><g><title>core::mem::replace (8 samples, 0.05%)</title><rect x="3.0618%" y="197" width="0.0489%" height="15" fill="rgb(220,129,5)" fg:x="501" fg:w="8"/><text x="3.3118%" y="207.50"></text></g><g><title>core::ptr::write (6 samples, 0.04%)</title><rect x="3.0740%" y="181" width="0.0367%" height="15" fill="rgb(242,17,10)" fg:x="503" fg:w="6"/><text x="3.3240%" y="191.50"></text></g><g><title>core::cmp::PartialOrd::le (10 samples, 0.06%)</title><rect x="5.3535%" y="165" width="0.0611%" height="15" fill="rgb(242,107,0)" fg:x="876" fg:w="10"/><text x="5.6035%" y="175.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="5.4024%" y="149" width="0.0122%" height="15" fill="rgb(251,28,31)" fg:x="884" fg:w="2"/><text x="5.6524%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (2 samples, 0.01%)</title><rect x="5.4024%" y="133" width="0.0122%" height="15" fill="rgb(233,223,10)" fg:x="884" fg:w="2"/><text x="5.6524%" y="143.50"></text></g><g><title>std::sync::poison::Flag::done (3 samples, 0.02%)</title><rect x="5.4880%" y="117" width="0.0183%" height="15" fill="rgb(215,21,27)" fg:x="898" fg:w="3"/><text x="5.7380%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rsm::local_data::LocalData&gt;&gt; (25 samples, 0.15%)</title><rect x="5.4880%" y="149" width="0.1528%" height="15" fill="rgb(232,23,21)" fg:x="898" fg:w="25"/><text x="5.7380%" y="159.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.15%)</title><rect x="5.4880%" y="133" width="0.1528%" height="15" fill="rgb(244,5,23)" fg:x="898" fg:w="25"/><text x="5.7380%" y="143.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (22 samples, 0.13%)</title><rect x="5.5063%" y="117" width="0.1344%" height="15" fill="rgb(226,81,46)" fg:x="901" fg:w="22"/><text x="5.7563%" y="127.50"></text></g><g><title>rsm::block_store::BlockStore::alloc (7 samples, 0.04%)</title><rect x="5.7386%" y="133" width="0.0428%" height="15" fill="rgb(247,70,30)" fg:x="939" fg:w="7"/><text x="5.9886%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (7 samples, 0.04%)</title><rect x="5.7386%" y="117" width="0.0428%" height="15" fill="rgb(212,68,19)" fg:x="939" fg:w="7"/><text x="5.9886%" y="127.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (51 samples, 0.31%)</title><rect x="5.8791%" y="101" width="0.3117%" height="15" fill="rgb(240,187,13)" fg:x="962" fg:w="51"/><text x="6.1291%" y="111.50"></text></g><g><title>rsm::shared::SharedRegionHandle::get (9 samples, 0.06%)</title><rect x="6.1908%" y="101" width="0.0550%" height="15" fill="rgb(223,113,26)" fg:x="1013" fg:w="9"/><text x="6.4408%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::as_mut (5 samples, 0.03%)</title><rect x="6.2152%" y="85" width="0.0306%" height="15" fill="rgb(206,192,2)" fg:x="1017" fg:w="5"/><text x="6.4652%" y="95.50"></text></g><g><title>rsm::shared::SharedRegionMap::init_descriptor (142 samples, 0.87%)</title><rect x="5.7874%" y="133" width="0.8678%" height="15" fill="rgb(241,108,4)" fg:x="947" fg:w="142"/><text x="6.0374%" y="143.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (135 samples, 0.83%)</title><rect x="5.8302%" y="117" width="0.8250%" height="15" fill="rgb(247,173,49)" fg:x="954" fg:w="135"/><text x="6.0802%" y="127.50"></text></g><g><title>rsm::shared::SharedRegionMap::init_descriptor::_{{closure}} (67 samples, 0.41%)</title><rect x="6.2458%" y="101" width="0.4095%" height="15" fill="rgb(224,114,35)" fg:x="1022" fg:w="67"/><text x="6.4958%" y="111.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (4 samples, 0.02%)</title><rect x="6.6553%" y="117" width="0.0244%" height="15" fill="rgb(245,159,27)" fg:x="1089" fg:w="4"/><text x="6.9053%" y="127.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.02%)</title><rect x="6.6797%" y="117" width="0.0183%" height="15" fill="rgb(245,172,44)" fg:x="1093" fg:w="3"/><text x="6.9297%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11,837 samples, 72.34%)</title><rect x="6.9364%" y="69" width="72.3400%" height="15" fill="rgb(236,23,11)" fg:x="1135" fg:w="11837"/><text x="7.1864%" y="79.50">core::intrinsics::copy_nonoverlapping</text></g><g><title>[libc.so.6] (11,832 samples, 72.31%)</title><rect x="6.9669%" y="53" width="72.3095%" height="15" fill="rgb(205,117,38)" fg:x="1140" fg:w="11832"/><text x="7.2169%" y="63.50">[libc.so.6]</text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="79.2642%" y="37" width="0.0122%" height="15" fill="rgb(237,72,25)" fg:x="12970" fg:w="2"/><text x="79.5142%" y="47.50"></text></g><g><title>core::ptr::null_mut (12 samples, 0.07%)</title><rect x="79.2764%" y="69" width="0.0733%" height="15" fill="rgb(244,70,9)" fg:x="12972" fg:w="12"/><text x="79.5264%" y="79.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (12 samples, 0.07%)</title><rect x="79.2764%" y="53" width="0.0733%" height="15" fill="rgb(217,125,39)" fg:x="12972" fg:w="12"/><text x="79.5264%" y="63.50"></text></g><g><title>opal_convertor_get_current_pointer_rs (9 samples, 0.06%)</title><rect x="79.3498%" y="69" width="0.0550%" height="15" fill="rgb(235,36,10)" fg:x="12984" fg:w="9"/><text x="79.5998%" y="79.50"></text></g><g><title>rsm::module::mca_btl_rsm_prepare_src::_{{closure}}::_{{closure}} (11,906 samples, 72.76%)</title><rect x="6.6980%" y="117" width="72.7617%" height="15" fill="rgb(251,123,47)" fg:x="1096" fg:w="11906"/><text x="6.9480%" y="127.50">rsm::module::mca_btl_rsm_prepare_src::_{{closure}}::_{{closure}}</text></g><g><title>rsm::shared::Block::prepare_fill (11,904 samples, 72.75%)</title><rect x="6.7103%" y="101" width="72.7495%" height="15" fill="rgb(221,13,13)" fg:x="1098" fg:w="11904"/><text x="6.9603%" y="111.50">rsm::shared::Block::prepare_fill</text></g><g><title>rsm::shared::convert_data (11,867 samples, 72.52%)</title><rect x="6.9364%" y="85" width="72.5234%" height="15" fill="rgb(238,131,9)" fg:x="1135" fg:w="11867"/><text x="7.1864%" y="95.50">rsm::shared::convert_data</text></g><g><title>opal_convertor_need_buffers_rs (9 samples, 0.06%)</title><rect x="79.4048%" y="69" width="0.0550%" height="15" fill="rgb(211,50,8)" fg:x="12993" fg:w="9"/><text x="79.6548%" y="79.50"></text></g><g><title>rsm::module::mca_btl_rsm_prepare_src::_{{closure}} (12,083 samples, 73.84%)</title><rect x="5.6408%" y="149" width="73.8434%" height="15" fill="rgb(245,182,24)" fg:x="923" fg:w="12083"/><text x="5.8908%" y="159.50">rsm::module::mca_btl_rsm_prepare_src::_{{closure}}</text></g><g><title>rsm::shared::SharedRegionMap::region_mut (11,917 samples, 72.83%)</title><rect x="6.6553%" y="133" width="72.8289%" height="15" fill="rgb(242,14,37)" fg:x="1089" fg:w="11917"/><text x="6.9053%" y="143.50">rsm::shared::SharedRegionMap::region_mut</text></g><g><title>rsm::shared::SharedRegionHandle::get (4 samples, 0.02%)</title><rect x="79.4598%" y="117" width="0.0244%" height="15" fill="rgb(246,228,12)" fg:x="13002" fg:w="4"/><text x="79.7098%" y="127.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (6 samples, 0.04%)</title><rect x="79.4842%" y="133" width="0.0367%" height="15" fill="rgb(213,55,15)" fg:x="13006" fg:w="6"/><text x="79.7342%" y="143.50"></text></g><g><title>std::sync::poison::Flag::guard (6 samples, 0.04%)</title><rect x="79.4842%" y="117" width="0.0367%" height="15" fill="rgb(209,9,3)" fg:x="13006" fg:w="6"/><text x="79.7342%" y="127.50"></text></g><g><title>std::thread::panicking (4 samples, 0.02%)</title><rect x="79.4964%" y="101" width="0.0244%" height="15" fill="rgb(230,59,30)" fg:x="13008" fg:w="4"/><text x="79.7464%" y="111.50"></text></g><g><title>std::panicking::panicking (4 samples, 0.02%)</title><rect x="79.4964%" y="85" width="0.0244%" height="15" fill="rgb(209,121,21)" fg:x="13008" fg:w="4"/><text x="79.7464%" y="95.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (4 samples, 0.02%)</title><rect x="79.4964%" y="69" width="0.0244%" height="15" fill="rgb(220,109,13)" fg:x="13008" fg:w="4"/><text x="79.7464%" y="79.50"></text></g><g><title>mca_btl_rsm_prepare_src (12,167 samples, 74.36%)</title><rect x="5.2985%" y="181" width="74.3568%" height="15" fill="rgb(232,18,1)" fg:x="867" fg:w="12167"/><text x="5.5485%" y="191.50">mca_btl_rsm_prepare_src</text></g><g><title>rsm::local_data::lock (12,148 samples, 74.24%)</title><rect x="5.4147%" y="165" width="74.2407%" height="15" fill="rgb(215,41,42)" fg:x="886" fg:w="12148"/><text x="5.6647%" y="175.50">rsm::local_data::lock</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (28 samples, 0.17%)</title><rect x="79.4842%" y="149" width="0.1711%" height="15" fill="rgb(224,123,36)" fg:x="13006" fg:w="28"/><text x="79.7342%" y="159.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (22 samples, 0.13%)</title><rect x="79.5209%" y="133" width="0.1344%" height="15" fill="rgb(240,125,3)" fg:x="13012" fg:w="22"/><text x="79.7709%" y="143.50"></text></g><g><title>core::cmp::PartialOrd::le (8 samples, 0.05%)</title><rect x="79.8203%" y="165" width="0.0489%" height="15" fill="rgb(205,98,50)" fg:x="13061" fg:w="8"/><text x="80.0703%" y="175.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (4 samples, 0.02%)</title><rect x="79.8448%" y="149" width="0.0244%" height="15" fill="rgb(205,185,37)" fg:x="13065" fg:w="4"/><text x="80.0948%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (4 samples, 0.02%)</title><rect x="79.8448%" y="133" width="0.0244%" height="15" fill="rgb(238,207,15)" fg:x="13065" fg:w="4"/><text x="80.0948%" y="143.50"></text></g><g><title>std::sync::poison::Flag::done (3 samples, 0.02%)</title><rect x="79.9181%" y="117" width="0.0183%" height="15" fill="rgb(213,199,42)" fg:x="13077" fg:w="3"/><text x="80.1681%" y="127.50"></text></g><g><title>std::thread::panicking (3 samples, 0.02%)</title><rect x="79.9181%" y="101" width="0.0183%" height="15" fill="rgb(235,201,11)" fg:x="13077" fg:w="3"/><text x="80.1681%" y="111.50"></text></g><g><title>std::panicking::panicking (3 samples, 0.02%)</title><rect x="79.9181%" y="85" width="0.0183%" height="15" fill="rgb(207,46,11)" fg:x="13077" fg:w="3"/><text x="80.1681%" y="95.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (3 samples, 0.02%)</title><rect x="79.9181%" y="69" width="0.0183%" height="15" fill="rgb(241,35,35)" fg:x="13077" fg:w="3"/><text x="80.1681%" y="79.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.02%)</title><rect x="79.9181%" y="53" width="0.0183%" height="15" fill="rgb(243,32,47)" fg:x="13077" fg:w="3"/><text x="80.1681%" y="63.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="79.9181%" y="37" width="0.0183%" height="15" fill="rgb(247,202,23)" fg:x="13077" fg:w="3"/><text x="80.1681%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rsm::local_data::LocalData&gt;&gt; (27 samples, 0.17%)</title><rect x="79.9181%" y="149" width="0.1650%" height="15" fill="rgb(219,102,11)" fg:x="13077" fg:w="27"/><text x="80.1681%" y="159.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.17%)</title><rect x="79.9181%" y="133" width="0.1650%" height="15" fill="rgb(243,110,44)" fg:x="13077" fg:w="27"/><text x="80.1681%" y="143.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (24 samples, 0.15%)</title><rect x="79.9364%" y="117" width="0.1467%" height="15" fill="rgb(222,74,54)" fg:x="13080" fg:w="24"/><text x="80.1864%" y="127.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (2 samples, 0.01%)</title><rect x="80.0831%" y="149" width="0.0122%" height="15" fill="rgb(216,99,12)" fg:x="13104" fg:w="2"/><text x="80.3331%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (7 samples, 0.04%)</title><rect x="80.1748%" y="133" width="0.0428%" height="15" fill="rgb(226,22,26)" fg:x="13119" fg:w="7"/><text x="80.4248%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;rsm::shared::SharedRegionMap&gt;&gt; (3 samples, 0.02%)</title><rect x="80.2237%" y="133" width="0.0183%" height="15" fill="rgb(217,163,10)" fg:x="13127" fg:w="3"/><text x="80.4737%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (3 samples, 0.02%)</title><rect x="80.2237%" y="117" width="0.0183%" height="15" fill="rgb(213,25,53)" fg:x="13127" fg:w="3"/><text x="80.4737%" y="127.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="80.2237%" y="101" width="0.0183%" height="15" fill="rgb(252,105,26)" fg:x="13127" fg:w="3"/><text x="80.4737%" y="111.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.02%)</title><rect x="80.2237%" y="85" width="0.0183%" height="15" fill="rgb(220,39,43)" fg:x="13127" fg:w="3"/><text x="80.4737%" y="95.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.02%)</title><rect x="80.2237%" y="69" width="0.0183%" height="15" fill="rgb(229,68,48)" fg:x="13127" fg:w="3"/><text x="80.4737%" y="79.50"></text></g><g><title>core::mem::replace (3 samples, 0.02%)</title><rect x="80.2237%" y="53" width="0.0183%" height="15" fill="rgb(252,8,32)" fg:x="13127" fg:w="3"/><text x="80.4737%" y="63.50"></text></g><g><title>core::ptr::write (3 samples, 0.02%)</title><rect x="80.2237%" y="37" width="0.0183%" height="15" fill="rgb(223,20,43)" fg:x="13127" fg:w="3"/><text x="80.4737%" y="47.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (14 samples, 0.09%)</title><rect x="80.2665%" y="117" width="0.0856%" height="15" fill="rgb(229,81,49)" fg:x="13134" fg:w="14"/><text x="80.5165%" y="127.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (14 samples, 0.09%)</title><rect x="80.2665%" y="101" width="0.0856%" height="15" fill="rgb(236,28,36)" fg:x="13134" fg:w="14"/><text x="80.5165%" y="111.50"></text></g><g><title>core::cell::BorrowRefMut::new (14 samples, 0.09%)</title><rect x="80.2665%" y="85" width="0.0856%" height="15" fill="rgb(249,185,26)" fg:x="13134" fg:w="14"/><text x="80.5165%" y="95.50"></text></g><g><title>rsm::fifo::encode_rank_block_id (4 samples, 0.02%)</title><rect x="80.3520%" y="117" width="0.0244%" height="15" fill="rgb(249,174,33)" fg:x="13148" fg:w="4"/><text x="80.6020%" y="127.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (3 samples, 0.02%)</title><rect x="80.3581%" y="101" width="0.0183%" height="15" fill="rgb(233,201,37)" fg:x="13149" fg:w="3"/><text x="80.6081%" y="111.50"></text></g><g><title>&lt;T as core::convert::TryFrom&lt;U&gt;&gt;::try_from (3 samples, 0.02%)</title><rect x="80.3581%" y="85" width="0.0183%" height="15" fill="rgb(221,78,26)" fg:x="13149" fg:w="3"/><text x="80.6081%" y="95.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.02%)</title><rect x="80.3581%" y="69" width="0.0183%" height="15" fill="rgb(250,127,30)" fg:x="13149" fg:w="3"/><text x="80.6081%" y="79.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;i32&gt; for i64&gt;::from (3 samples, 0.02%)</title><rect x="80.3581%" y="53" width="0.0183%" height="15" fill="rgb(230,49,44)" fg:x="13149" fg:w="3"/><text x="80.6081%" y="63.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (26 samples, 0.16%)</title><rect x="80.4131%" y="101" width="0.1589%" height="15" fill="rgb(229,67,23)" fg:x="13158" fg:w="26"/><text x="80.6631%" y="111.50"></text></g><g><title>core::cmp::PartialOrd::le (4 samples, 0.02%)</title><rect x="80.8593%" y="85" width="0.0244%" height="15" fill="rgb(249,83,47)" fg:x="13231" fg:w="4"/><text x="81.1093%" y="95.50"></text></g><g><title>core::sync::atomic::AtomicI64::swap (355 samples, 2.17%)</title><rect x="80.8837%" y="85" width="2.1695%" height="15" fill="rgb(215,43,3)" fg:x="13235" fg:w="355"/><text x="81.1337%" y="95.50">c..</text></g><g><title>core::sync::atomic::atomic_swap (355 samples, 2.17%)</title><rect x="80.8837%" y="69" width="2.1695%" height="15" fill="rgb(238,154,13)" fg:x="13235" fg:w="355"/><text x="81.1337%" y="79.50">c..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (3 samples, 0.02%)</title><rect x="83.0593%" y="69" width="0.0183%" height="15" fill="rgb(219,56,2)" fg:x="13591" fg:w="3"/><text x="83.3093%" y="79.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (10 samples, 0.06%)</title><rect x="83.0777%" y="69" width="0.0611%" height="15" fill="rgb(233,0,4)" fg:x="13594" fg:w="10"/><text x="83.3277%" y="79.50"></text></g><g><title>rsm::fifo::FIFO::push::_{{closure}} (424 samples, 2.59%)</title><rect x="80.5720%" y="101" width="2.5912%" height="15" fill="rgb(235,30,7)" fg:x="13184" fg:w="424"/><text x="80.8220%" y="111.50">rs..</text></g><g><title>rsm::shared::SharedRegionMap::region_mut (17 samples, 0.10%)</title><rect x="83.0593%" y="85" width="0.1039%" height="15" fill="rgb(250,79,13)" fg:x="13591" fg:w="17"/><text x="83.3093%" y="95.50"></text></g><g><title>rsm::shared::SharedRegionHandle::get (4 samples, 0.02%)</title><rect x="83.1388%" y="69" width="0.0244%" height="15" fill="rgb(211,146,34)" fg:x="13604" fg:w="4"/><text x="83.3888%" y="79.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.02%)</title><rect x="83.1449%" y="53" width="0.0183%" height="15" fill="rgb(228,22,38)" fg:x="13605" fg:w="3"/><text x="83.3949%" y="63.50"></text></g><g><title>rsm::fifo::FIFO::push (482 samples, 2.95%)</title><rect x="80.2420%" y="133" width="2.9457%" height="15" fill="rgb(235,168,5)" fg:x="13130" fg:w="482"/><text x="80.4920%" y="143.50">rs..</text></g><g><title>rsm::shared::SharedRegionMap::region_mut (460 samples, 2.81%)</title><rect x="80.3765%" y="117" width="2.8112%" height="15" fill="rgb(221,155,16)" fg:x="13152" fg:w="460"/><text x="80.6265%" y="127.50">rs..</text></g><g><title>rsm::shared::SharedRegionHandle::get (4 samples, 0.02%)</title><rect x="83.1632%" y="101" width="0.0244%" height="15" fill="rgb(215,215,53)" fg:x="13608" fg:w="4"/><text x="83.4132%" y="111.50"></text></g><g><title>rsm::proc_info::local_rank (3 samples, 0.02%)</title><rect x="83.1877%" y="133" width="0.0183%" height="15" fill="rgb(223,4,10)" fg:x="13612" fg:w="3"/><text x="83.4377%" y="143.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (2 samples, 0.01%)</title><rect x="83.2060%" y="117" width="0.0122%" height="15" fill="rgb(234,103,6)" fg:x="13615" fg:w="2"/><text x="83.4560%" y="127.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.02%)</title><rect x="83.2182%" y="117" width="0.0183%" height="15" fill="rgb(227,97,0)" fg:x="13617" fg:w="3"/><text x="83.4682%" y="127.50"></text></g><g><title>rsm::module::mca_btl_rsm_send::_{{closure}}::_{{closure}} (3 samples, 0.02%)</title><rect x="83.2366%" y="117" width="0.0183%" height="15" fill="rgb(234,150,53)" fg:x="13620" fg:w="3"/><text x="83.4866%" y="127.50"></text></g><g><title>core::sync::atomic::AtomicI64::store (2 samples, 0.01%)</title><rect x="83.2427%" y="101" width="0.0122%" height="15" fill="rgb(228,201,54)" fg:x="13621" fg:w="2"/><text x="83.4927%" y="111.50"></text></g><g><title>core::sync::atomic::atomic_store (2 samples, 0.01%)</title><rect x="83.2427%" y="85" width="0.0122%" height="15" fill="rgb(222,22,37)" fg:x="13621" fg:w="2"/><text x="83.4927%" y="95.50"></text></g><g><title>rsm::module::mca_btl_rsm_send::_{{closure}} (519 samples, 3.17%)</title><rect x="80.0953%" y="149" width="3.1718%" height="15" fill="rgb(237,53,32)" fg:x="13106" fg:w="519"/><text x="80.3453%" y="159.50">rsm..</text></g><g><title>rsm::shared::SharedRegionMap::region_mut (10 samples, 0.06%)</title><rect x="83.2060%" y="133" width="0.0611%" height="15" fill="rgb(233,25,53)" fg:x="13615" fg:w="10"/><text x="83.4560%" y="143.50"></text></g><g><title>rsm::shared::SharedRegionHandle::get (2 samples, 0.01%)</title><rect x="83.2549%" y="117" width="0.0122%" height="15" fill="rgb(210,40,34)" fg:x="13623" fg:w="2"/><text x="83.5049%" y="127.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (6 samples, 0.04%)</title><rect x="83.2671%" y="133" width="0.0367%" height="15" fill="rgb(241,220,44)" fg:x="13625" fg:w="6"/><text x="83.5171%" y="143.50"></text></g><g><title>std::sync::poison::Flag::guard (6 samples, 0.04%)</title><rect x="83.2671%" y="117" width="0.0367%" height="15" fill="rgb(235,28,35)" fg:x="13625" fg:w="6"/><text x="83.5171%" y="127.50"></text></g><g><title>std::thread::panicking (6 samples, 0.04%)</title><rect x="83.2671%" y="101" width="0.0367%" height="15" fill="rgb(210,56,17)" fg:x="13625" fg:w="6"/><text x="83.5171%" y="111.50"></text></g><g><title>std::panicking::panicking (6 samples, 0.04%)</title><rect x="83.2671%" y="85" width="0.0367%" height="15" fill="rgb(224,130,29)" fg:x="13625" fg:w="6"/><text x="83.5171%" y="95.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (6 samples, 0.04%)</title><rect x="83.2671%" y="69" width="0.0367%" height="15" fill="rgb(235,212,8)" fg:x="13625" fg:w="6"/><text x="83.5171%" y="79.50"></text></g><g><title>mca_pml_ob1_send_request_schedule_once (13,012 samples, 79.52%)</title><rect x="4.0152%" y="197" width="79.5209%" height="15" fill="rgb(223,33,50)" fg:x="657" fg:w="13012"/><text x="4.2652%" y="207.50">mca_pml_ob1_send_request_schedule_once</text></g><g><title>mca_btl_rsm_send (635 samples, 3.88%)</title><rect x="79.6553%" y="181" width="3.8807%" height="15" fill="rgb(219,149,13)" fg:x="13034" fg:w="635"/><text x="79.9053%" y="191.50">mca_..</text></g><g><title>rsm::local_data::lock (600 samples, 3.67%)</title><rect x="79.8692%" y="165" width="3.6668%" height="15" fill="rgb(250,156,29)" fg:x="13069" fg:w="600"/><text x="80.1192%" y="175.50">rsm:..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (44 samples, 0.27%)</title><rect x="83.2671%" y="149" width="0.2689%" height="15" fill="rgb(216,193,19)" fg:x="13625" fg:w="44"/><text x="83.5171%" y="159.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (38 samples, 0.23%)</title><rect x="83.3038%" y="133" width="0.2322%" height="15" fill="rgb(216,135,14)" fg:x="13631" fg:w="38"/><text x="83.5538%" y="143.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (4 samples, 0.02%)</title><rect x="83.5116%" y="117" width="0.0244%" height="15" fill="rgb(241,47,5)" fg:x="13665" fg:w="4"/><text x="83.7616%" y="127.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.02%)</title><rect x="83.5116%" y="101" width="0.0244%" height="15" fill="rgb(233,42,35)" fg:x="13665" fg:w="4"/><text x="83.7616%" y="111.50"></text></g><g><title>mca_pml_ob1_frag_completion (13,165 samples, 80.46%)</title><rect x="3.1107%" y="213" width="80.4559%" height="15" fill="rgb(231,13,6)" fg:x="509" fg:w="13165"/><text x="3.3607%" y="223.50">mca_pml_ob1_frag_completion</text></g><g><title>send_request_pml_complete (4 samples, 0.02%)</title><rect x="83.5421%" y="197" width="0.0244%" height="15" fill="rgb(207,181,40)" fg:x="13670" fg:w="4"/><text x="83.7921%" y="207.50"></text></g><g><title>mca_pml_ob1_send_request_copy_in_out (3 samples, 0.02%)</title><rect x="83.6216%" y="197" width="0.0183%" height="15" fill="rgb(254,173,49)" fg:x="13683" fg:w="3"/><text x="83.8716%" y="207.50"></text></g><g><title>core::cmp::PartialOrd::le (2 samples, 0.01%)</title><rect x="83.8110%" y="165" width="0.0122%" height="15" fill="rgb(221,1,38)" fg:x="13714" fg:w="2"/><text x="84.0610%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rsm::local_data::LocalData&gt;&gt; (3 samples, 0.02%)</title><rect x="83.8294%" y="149" width="0.0183%" height="15" fill="rgb(206,124,46)" fg:x="13717" fg:w="3"/><text x="84.0794%" y="159.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="83.8294%" y="133" width="0.0183%" height="15" fill="rgb(249,21,11)" fg:x="13717" fg:w="3"/><text x="84.0794%" y="143.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (3 samples, 0.02%)</title><rect x="83.8294%" y="117" width="0.0183%" height="15" fill="rgb(222,201,40)" fg:x="13717" fg:w="3"/><text x="84.0794%" y="127.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (7 samples, 0.04%)</title><rect x="83.8783%" y="101" width="0.0428%" height="15" fill="rgb(235,61,29)" fg:x="13725" fg:w="7"/><text x="84.1283%" y="111.50"></text></g><g><title>rsm::shared::SharedRegionMap::init_descriptor (20 samples, 0.12%)</title><rect x="83.8660%" y="133" width="0.1222%" height="15" fill="rgb(219,207,3)" fg:x="13723" fg:w="20"/><text x="84.1160%" y="143.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (18 samples, 0.11%)</title><rect x="83.8783%" y="117" width="0.1100%" height="15" fill="rgb(222,56,46)" fg:x="13725" fg:w="18"/><text x="84.1283%" y="127.50"></text></g><g><title>rsm::shared::SharedRegionMap::init_descriptor::_{{closure}} (10 samples, 0.06%)</title><rect x="83.9272%" y="101" width="0.0611%" height="15" fill="rgb(239,76,54)" fg:x="13733" fg:w="10"/><text x="84.1772%" y="111.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,554 samples, 9.50%)</title><rect x="84.0005%" y="69" width="9.4970%" height="15" fill="rgb(231,124,27)" fg:x="13745" fg:w="1554"/><text x="84.2505%" y="79.50">core::intrinsi..</text></g><g><title>[libc.so.6] (1,554 samples, 9.50%)</title><rect x="84.0005%" y="53" width="9.4970%" height="15" fill="rgb(249,195,6)" fg:x="13745" fg:w="1554"/><text x="84.2505%" y="63.50">[libc.so.6]</text></g><g><title>core::ptr::null_mut (3 samples, 0.02%)</title><rect x="93.4975%" y="69" width="0.0183%" height="15" fill="rgb(237,174,47)" fg:x="15299" fg:w="3"/><text x="93.7475%" y="79.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.02%)</title><rect x="93.4975%" y="53" width="0.0183%" height="15" fill="rgb(206,201,31)" fg:x="15299" fg:w="3"/><text x="93.7475%" y="63.50"></text></g><g><title>opal_convertor_get_current_pointer_rs (2 samples, 0.01%)</title><rect x="93.5159%" y="69" width="0.0122%" height="15" fill="rgb(231,57,52)" fg:x="15302" fg:w="2"/><text x="93.7659%" y="79.50"></text></g><g><title>rsm::module::mca_btl_rsm_prepare_src::_{{closure}} (1,585 samples, 9.69%)</title><rect x="83.8477%" y="149" width="9.6865%" height="15" fill="rgb(248,177,22)" fg:x="13720" fg:w="1585"/><text x="84.0977%" y="159.50">rsm::module::m..</text></g><g><title>rsm::shared::SharedRegionMap::region_mut (1,562 samples, 9.55%)</title><rect x="83.9883%" y="133" width="9.5459%" height="15" fill="rgb(215,211,37)" fg:x="13743" fg:w="1562"/><text x="84.2383%" y="143.50">rsm::shared::S..</text></g><g><title>rsm::module::mca_btl_rsm_prepare_src::_{{closure}}::_{{closure}} (1,562 samples, 9.55%)</title><rect x="83.9883%" y="117" width="9.5459%" height="15" fill="rgb(241,128,51)" fg:x="13743" fg:w="1562"/><text x="84.2383%" y="127.50">rsm::module::m..</text></g><g><title>rsm::shared::Block::prepare_fill (1,562 samples, 9.55%)</title><rect x="83.9883%" y="101" width="9.5459%" height="15" fill="rgb(227,165,31)" fg:x="13743" fg:w="1562"/><text x="84.2383%" y="111.50">rsm::shared::B..</text></g><g><title>rsm::shared::convert_data (1,560 samples, 9.53%)</title><rect x="84.0005%" y="85" width="9.5337%" height="15" fill="rgb(228,167,24)" fg:x="13745" fg:w="1560"/><text x="84.2505%" y="95.50">rsm::shared::c..</text></g><g><title>mca_btl_rsm_prepare_src (1,597 samples, 9.76%)</title><rect x="83.7988%" y="181" width="9.7598%" height="15" fill="rgb(228,143,12)" fg:x="13712" fg:w="1597"/><text x="84.0488%" y="191.50">mca_btl_rsm_pr..</text></g><g><title>rsm::local_data::lock (1,593 samples, 9.74%)</title><rect x="83.8233%" y="165" width="9.7354%" height="15" fill="rgb(249,149,8)" fg:x="13716" fg:w="1593"/><text x="84.0733%" y="175.50">rsm::local_dat..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.02%)</title><rect x="93.5342%" y="149" width="0.0244%" height="15" fill="rgb(243,35,44)" fg:x="15305" fg:w="4"/><text x="93.7842%" y="159.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (3 samples, 0.02%)</title><rect x="93.5403%" y="133" width="0.0183%" height="15" fill="rgb(246,89,9)" fg:x="15306" fg:w="3"/><text x="93.7903%" y="143.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.01%)</title><rect x="93.6014%" y="117" width="0.0122%" height="15" fill="rgb(233,213,13)" fg:x="15316" fg:w="2"/><text x="93.8514%" y="127.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.01%)</title><rect x="93.6014%" y="101" width="0.0122%" height="15" fill="rgb(233,141,41)" fg:x="15316" fg:w="2"/><text x="93.8514%" y="111.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.01%)</title><rect x="93.6014%" y="85" width="0.0122%" height="15" fill="rgb(239,167,4)" fg:x="15316" fg:w="2"/><text x="93.8514%" y="95.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (5 samples, 0.03%)</title><rect x="93.6198%" y="101" width="0.0306%" height="15" fill="rgb(209,217,16)" fg:x="15319" fg:w="5"/><text x="93.8698%" y="111.50"></text></g><g><title>core::cmp::PartialOrd::le (2 samples, 0.01%)</title><rect x="93.6686%" y="85" width="0.0122%" height="15" fill="rgb(219,88,35)" fg:x="15327" fg:w="2"/><text x="93.9186%" y="95.50"></text></g><g><title>rsm::fifo::FIFO::push (51 samples, 0.31%)</title><rect x="93.5953%" y="133" width="0.3117%" height="15" fill="rgb(220,193,23)" fg:x="15315" fg:w="51"/><text x="93.8453%" y="143.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (48 samples, 0.29%)</title><rect x="93.6136%" y="117" width="0.2933%" height="15" fill="rgb(230,90,52)" fg:x="15318" fg:w="48"/><text x="93.8636%" y="127.50"></text></g><g><title>rsm::fifo::FIFO::push::_{{closure}} (42 samples, 0.26%)</title><rect x="93.6503%" y="101" width="0.2567%" height="15" fill="rgb(252,106,19)" fg:x="15324" fg:w="42"/><text x="93.9003%" y="111.50"></text></g><g><title>core::sync::atomic::AtomicI64::swap (37 samples, 0.23%)</title><rect x="93.6809%" y="85" width="0.2261%" height="15" fill="rgb(206,74,20)" fg:x="15329" fg:w="37"/><text x="93.9309%" y="95.50"></text></g><g><title>core::sync::atomic::atomic_swap (37 samples, 0.23%)</title><rect x="93.6809%" y="69" width="0.2261%" height="15" fill="rgb(230,138,44)" fg:x="15329" fg:w="37"/><text x="93.9309%" y="79.50"></text></g><g><title>rsm::module::mca_btl_rsm_send::_{{closure}} (54 samples, 0.33%)</title><rect x="93.5892%" y="149" width="0.3300%" height="15" fill="rgb(235,182,43)" fg:x="15314" fg:w="54"/><text x="93.8392%" y="159.50"></text></g><g><title>mca_pml_ob1_recv_frag_callback_ack (1,708 samples, 10.44%)</title><rect x="83.5666%" y="213" width="10.4382%" height="15" fill="rgb(242,16,51)" fg:x="13674" fg:w="1708"/><text x="83.8166%" y="223.50">mca_pml_ob1_rec..</text></g><g><title>mca_pml_ob1_send_request_schedule_once (1,696 samples, 10.36%)</title><rect x="83.6399%" y="197" width="10.3648%" height="15" fill="rgb(248,9,4)" fg:x="13686" fg:w="1696"/><text x="83.8899%" y="207.50">mca_pml_ob1_sen..</text></g><g><title>mca_btl_rsm_send (73 samples, 0.45%)</title><rect x="93.5586%" y="181" width="0.4461%" height="15" fill="rgb(210,31,22)" fg:x="15309" fg:w="73"/><text x="93.8086%" y="191.50"></text></g><g><title>rsm::local_data::lock (72 samples, 0.44%)</title><rect x="93.5647%" y="165" width="0.4400%" height="15" fill="rgb(239,54,39)" fg:x="15310" fg:w="72"/><text x="93.8147%" y="175.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 0.09%)</title><rect x="93.9192%" y="149" width="0.0856%" height="15" fill="rgb(230,99,41)" fg:x="15368" fg:w="14"/><text x="94.1692%" y="159.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (14 samples, 0.09%)</title><rect x="93.9192%" y="133" width="0.0856%" height="15" fill="rgb(253,106,12)" fg:x="15368" fg:w="14"/><text x="94.1692%" y="143.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (2 samples, 0.01%)</title><rect x="93.9925%" y="117" width="0.0122%" height="15" fill="rgb(213,46,41)" fg:x="15380" fg:w="2"/><text x="94.2425%" y="127.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.01%)</title><rect x="93.9925%" y="101" width="0.0122%" height="15" fill="rgb(215,133,35)" fg:x="15380" fg:w="2"/><text x="94.2425%" y="111.50"></text></g><g><title>mca_pml_ob1_recv_frag_callback_match (3 samples, 0.02%)</title><rect x="94.0048%" y="213" width="0.0183%" height="15" fill="rgb(213,28,5)" fg:x="15382" fg:w="3"/><text x="94.2548%" y="223.50"></text></g><g><title>mca_pml_ob1_rndv_completion (6 samples, 0.04%)</title><rect x="94.0231%" y="213" width="0.0367%" height="15" fill="rgb(215,77,49)" fg:x="15385" fg:w="6"/><text x="94.2731%" y="223.50"></text></g><g><title>core::cmp::PartialOrd::le (2 samples, 0.01%)</title><rect x="94.2676%" y="197" width="0.0122%" height="15" fill="rgb(248,100,22)" fg:x="15425" fg:w="2"/><text x="94.5176%" y="207.50"></text></g><g><title>std::sync::poison::Flag::done (3 samples, 0.02%)</title><rect x="94.2798%" y="165" width="0.0183%" height="15" fill="rgb(208,67,9)" fg:x="15427" fg:w="3"/><text x="94.5298%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rsm::local_data::LocalData&gt;&gt; (70 samples, 0.43%)</title><rect x="94.2798%" y="197" width="0.4278%" height="15" fill="rgb(219,133,21)" fg:x="15427" fg:w="70"/><text x="94.5298%" y="207.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.43%)</title><rect x="94.2798%" y="181" width="0.4278%" height="15" fill="rgb(246,46,29)" fg:x="15427" fg:w="70"/><text x="94.5298%" y="191.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (67 samples, 0.41%)</title><rect x="94.2981%" y="165" width="0.4095%" height="15" fill="rgb(246,185,52)" fg:x="15430" fg:w="67"/><text x="94.5481%" y="175.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (10 samples, 0.06%)</title><rect x="94.7320%" y="181" width="0.0611%" height="15" fill="rgb(252,136,11)" fg:x="15501" fg:w="10"/><text x="94.9820%" y="191.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (10 samples, 0.06%)</title><rect x="94.7320%" y="165" width="0.0611%" height="15" fill="rgb(219,138,53)" fg:x="15501" fg:w="10"/><text x="94.9820%" y="175.50"></text></g><g><title>core::cell::BorrowRefMut::new (10 samples, 0.06%)</title><rect x="94.7320%" y="149" width="0.0611%" height="15" fill="rgb(211,51,23)" fg:x="15501" fg:w="10"/><text x="94.9820%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;rsm::shared::SharedRegionMap&gt;&gt; (11 samples, 0.07%)</title><rect x="94.7931%" y="181" width="0.0672%" height="15" fill="rgb(247,221,28)" fg:x="15511" fg:w="11"/><text x="95.0431%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (11 samples, 0.07%)</title><rect x="94.7931%" y="165" width="0.0672%" height="15" fill="rgb(251,222,45)" fg:x="15511" fg:w="11"/><text x="95.0431%" y="175.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (11 samples, 0.07%)</title><rect x="94.7931%" y="149" width="0.0672%" height="15" fill="rgb(217,162,53)" fg:x="15511" fg:w="11"/><text x="95.0431%" y="159.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (11 samples, 0.07%)</title><rect x="94.7931%" y="133" width="0.0672%" height="15" fill="rgb(229,93,14)" fg:x="15511" fg:w="11"/><text x="95.0431%" y="143.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (11 samples, 0.07%)</title><rect x="94.7931%" y="117" width="0.0672%" height="15" fill="rgb(209,67,49)" fg:x="15511" fg:w="11"/><text x="95.0431%" y="127.50"></text></g><g><title>core::mem::replace (11 samples, 0.07%)</title><rect x="94.7931%" y="101" width="0.0672%" height="15" fill="rgb(213,87,29)" fg:x="15511" fg:w="11"/><text x="95.0431%" y="111.50"></text></g><g><title>core::ptr::write (11 samples, 0.07%)</title><rect x="94.7931%" y="85" width="0.0672%" height="15" fill="rgb(205,151,52)" fg:x="15511" fg:w="11"/><text x="95.0431%" y="95.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (7 samples, 0.04%)</title><rect x="94.8787%" y="165" width="0.0428%" height="15" fill="rgb(253,215,39)" fg:x="15525" fg:w="7"/><text x="95.1287%" y="175.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (4 samples, 0.02%)</title><rect x="94.9398%" y="149" width="0.0244%" height="15" fill="rgb(221,220,41)" fg:x="15535" fg:w="4"/><text x="95.1898%" y="159.50"></text></g><g><title>core::convert::num::ptr_try_from_impls::&lt;impl core::convert::TryFrom&lt;i32&gt; for usize&gt;::try_from (4 samples, 0.02%)</title><rect x="94.9398%" y="133" width="0.0244%" height="15" fill="rgb(218,133,21)" fg:x="15535" fg:w="4"/><text x="95.1898%" y="143.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (29 samples, 0.18%)</title><rect x="94.8726%" y="181" width="0.1772%" height="15" fill="rgb(221,193,43)" fg:x="15524" fg:w="29"/><text x="95.1226%" y="191.50"></text></g><g><title>rsm::Handler::run::_{{closure}}::_{{closure}} (21 samples, 0.13%)</title><rect x="94.9215%" y="165" width="0.1283%" height="15" fill="rgb(240,128,52)" fg:x="15532" fg:w="21"/><text x="95.1715%" y="175.50"></text></g><g><title>core::sync::atomic::AtomicI64::store (14 samples, 0.09%)</title><rect x="94.9642%" y="149" width="0.0856%" height="15" fill="rgb(253,114,12)" fg:x="15539" fg:w="14"/><text x="95.2142%" y="159.50"></text></g><g><title>core::sync::atomic::atomic_store (14 samples, 0.09%)</title><rect x="94.9642%" y="133" width="0.0856%" height="15" fill="rgb(215,223,47)" fg:x="15539" fg:w="14"/><text x="95.2142%" y="143.50"></text></g><g><title>rsm::Handler::run::_{{closure}} (98 samples, 0.60%)</title><rect x="94.7137%" y="197" width="0.5989%" height="15" fill="rgb(248,225,23)" fg:x="15498" fg:w="98"/><text x="94.9637%" y="207.50"></text></g><g><title>rsm::shared::SharedRegionMap::reset_descriptor (43 samples, 0.26%)</title><rect x="95.0498%" y="181" width="0.2628%" height="15" fill="rgb(250,108,0)" fg:x="15553" fg:w="43"/><text x="95.2998%" y="191.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (11 samples, 0.07%)</title><rect x="95.3187%" y="181" width="0.0672%" height="15" fill="rgb(228,208,7)" fg:x="15597" fg:w="11"/><text x="95.5687%" y="191.50"></text></g><g><title>std::sync::poison::Flag::guard (11 samples, 0.07%)</title><rect x="95.3187%" y="165" width="0.0672%" height="15" fill="rgb(244,45,10)" fg:x="15597" fg:w="11"/><text x="95.5687%" y="175.50"></text></g><g><title>std::thread::panicking (11 samples, 0.07%)</title><rect x="95.3187%" y="149" width="0.0672%" height="15" fill="rgb(207,125,25)" fg:x="15597" fg:w="11"/><text x="95.5687%" y="159.50"></text></g><g><title>std::panicking::panicking (11 samples, 0.07%)</title><rect x="95.3187%" y="133" width="0.0672%" height="15" fill="rgb(210,195,18)" fg:x="15597" fg:w="11"/><text x="95.5687%" y="143.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (11 samples, 0.07%)</title><rect x="95.3187%" y="117" width="0.0672%" height="15" fill="rgb(249,80,12)" fg:x="15597" fg:w="11"/><text x="95.5687%" y="127.50"></text></g><g><title>rsm::Handler::run (15,278 samples, 93.37%)</title><rect x="2.7562%" y="229" width="93.3692%" height="15" fill="rgb(221,65,9)" fg:x="451" fg:w="15278"/><text x="3.0062%" y="239.50">rsm::Handler::run</text></g><g><title>rsm::local_data::lock (338 samples, 2.07%)</title><rect x="94.0598%" y="213" width="2.0656%" height="15" fill="rgb(235,49,36)" fg:x="15391" fg:w="338"/><text x="94.3098%" y="223.50">r..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (132 samples, 0.81%)</title><rect x="95.3187%" y="197" width="0.8067%" height="15" fill="rgb(225,32,20)" fg:x="15597" fg:w="132"/><text x="95.5687%" y="207.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (121 samples, 0.74%)</title><rect x="95.3859%" y="181" width="0.7395%" height="15" fill="rgb(215,141,46)" fg:x="15608" fg:w="121"/><text x="95.6359%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rsm::local_data::LocalData&gt;&gt; (28 samples, 0.17%)</title><rect x="96.2415%" y="213" width="0.1711%" height="15" fill="rgb(250,160,47)" fg:x="15748" fg:w="28"/><text x="96.4915%" y="223.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.17%)</title><rect x="96.2415%" y="197" width="0.1711%" height="15" fill="rgb(216,222,40)" fg:x="15748" fg:w="28"/><text x="96.4915%" y="207.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (27 samples, 0.17%)</title><rect x="96.2476%" y="181" width="0.1650%" height="15" fill="rgb(234,217,39)" fg:x="15749" fg:w="27"/><text x="96.4976%" y="191.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.04%)</title><rect x="96.4493%" y="181" width="0.0428%" height="15" fill="rgb(207,178,40)" fg:x="15782" fg:w="7"/><text x="96.6993%" y="191.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.04%)</title><rect x="96.4493%" y="165" width="0.0428%" height="15" fill="rgb(221,136,13)" fg:x="15782" fg:w="7"/><text x="96.6993%" y="175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (10 samples, 0.06%)</title><rect x="96.4493%" y="197" width="0.0611%" height="15" fill="rgb(249,199,10)" fg:x="15782" fg:w="10"/><text x="96.6993%" y="207.50"></text></g><g><title>rsm::mca_btl_rsm_component_progress::_{{closure}}::_{{closure}} (3 samples, 0.02%)</title><rect x="96.4921%" y="181" width="0.0183%" height="15" fill="rgb(249,222,13)" fg:x="15789" fg:w="3"/><text x="96.7421%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.02%)</title><rect x="96.4921%" y="165" width="0.0183%" height="15" fill="rgb(244,185,38)" fg:x="15789" fg:w="3"/><text x="96.7421%" y="175.50"></text></g><g><title>core::cmp::PartialOrd::le (4 samples, 0.02%)</title><rect x="96.5104%" y="197" width="0.0244%" height="15" fill="rgb(236,202,9)" fg:x="15792" fg:w="4"/><text x="96.7604%" y="207.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (4 samples, 0.02%)</title><rect x="96.5104%" y="181" width="0.0244%" height="15" fill="rgb(250,229,37)" fg:x="15792" fg:w="4"/><text x="96.7604%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (4 samples, 0.02%)</title><rect x="96.5104%" y="165" width="0.0244%" height="15" fill="rgb(206,174,23)" fg:x="15792" fg:w="4"/><text x="96.7604%" y="175.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (3 samples, 0.02%)</title><rect x="96.5593%" y="181" width="0.0183%" height="15" fill="rgb(211,33,43)" fg:x="15800" fg:w="3"/><text x="96.8093%" y="191.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (3 samples, 0.02%)</title><rect x="96.5593%" y="165" width="0.0183%" height="15" fill="rgb(245,58,50)" fg:x="15800" fg:w="3"/><text x="96.8093%" y="175.50"></text></g><g><title>core::cell::BorrowRefMut::new (3 samples, 0.02%)</title><rect x="96.5593%" y="149" width="0.0183%" height="15" fill="rgb(244,68,36)" fg:x="15800" fg:w="3"/><text x="96.8093%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (5 samples, 0.03%)</title><rect x="96.5776%" y="165" width="0.0306%" height="15" fill="rgb(232,229,15)" fg:x="15803" fg:w="5"/><text x="96.8276%" y="175.50"></text></g><g><title>core::sync::atomic::AtomicI64::load (181 samples, 1.11%)</title><rect x="97.7021%" y="149" width="1.1062%" height="15" fill="rgb(254,30,23)" fg:x="15987" fg:w="181"/><text x="97.9521%" y="159.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::TryFrom&lt;i64&gt; for i32&gt;::try_from (7 samples, 0.04%)</title><rect x="98.8083%" y="117" width="0.0428%" height="15" fill="rgb(235,160,14)" fg:x="16168" fg:w="7"/><text x="99.0583%" y="127.50"></text></g><g><title>rsm::fifo::extract_rank_block_id (8 samples, 0.05%)</title><rect x="98.8083%" y="149" width="0.0489%" height="15" fill="rgb(212,155,44)" fg:x="16168" fg:w="8"/><text x="99.0583%" y="159.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (8 samples, 0.05%)</title><rect x="98.8083%" y="133" width="0.0489%" height="15" fill="rgb(226,2,50)" fg:x="16168" fg:w="8"/><text x="99.0583%" y="143.50"></text></g><g><title>rsm::fifo::FIFO::pop (382 samples, 2.33%)</title><rect x="96.5349%" y="197" width="2.3345%" height="15" fill="rgb(234,177,6)" fg:x="15796" fg:w="382"/><text x="96.7849%" y="207.50">r..</text></g><g><title>rsm::shared::SharedRegionMap::region_mut (375 samples, 2.29%)</title><rect x="96.5776%" y="181" width="2.2918%" height="15" fill="rgb(217,24,9)" fg:x="15803" fg:w="375"/><text x="96.8276%" y="191.50">r..</text></g><g><title>rsm::fifo::FIFO::pop::_{{closure}} (370 samples, 2.26%)</title><rect x="96.6082%" y="165" width="2.2612%" height="15" fill="rgb(220,13,46)" fg:x="15808" fg:w="370"/><text x="96.8582%" y="175.50">r..</text></g><g><title>rsm::shared::SharedRegionMap::region_mut (2 samples, 0.01%)</title><rect x="98.8572%" y="149" width="0.0122%" height="15" fill="rgb(239,221,27)" fg:x="16176" fg:w="2"/><text x="99.1072%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.01%)</title><rect x="98.8572%" y="133" width="0.0122%" height="15" fill="rgb(222,198,25)" fg:x="16176" fg:w="2"/><text x="99.1072%" y="143.50"></text></g><g><title>core::sync::atomic::AtomicI64::swap (11 samples, 0.07%)</title><rect x="98.8755%" y="149" width="0.0672%" height="15" fill="rgb(211,99,13)" fg:x="16179" fg:w="11"/><text x="99.1255%" y="159.50"></text></g><g><title>core::sync::atomic::atomic_swap (11 samples, 0.07%)</title><rect x="98.8755%" y="133" width="0.0672%" height="15" fill="rgb(232,111,31)" fg:x="16179" fg:w="11"/><text x="99.1255%" y="143.50"></text></g><g><title>rsm::fifo::FIFO::push (13 samples, 0.08%)</title><rect x="98.8694%" y="197" width="0.0794%" height="15" fill="rgb(245,82,37)" fg:x="16178" fg:w="13"/><text x="99.1194%" y="207.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (13 samples, 0.08%)</title><rect x="98.8694%" y="181" width="0.0794%" height="15" fill="rgb(227,149,46)" fg:x="16178" fg:w="13"/><text x="99.1194%" y="191.50"></text></g><g><title>rsm::fifo::FIFO::push::_{{closure}} (13 samples, 0.08%)</title><rect x="98.8694%" y="165" width="0.0794%" height="15" fill="rgb(218,36,50)" fg:x="16178" fg:w="13"/><text x="99.1194%" y="175.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.01%)</title><rect x="98.9916%" y="181" width="0.0122%" height="15" fill="rgb(226,80,48)" fg:x="16198" fg:w="2"/><text x="99.2416%" y="191.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.01%)</title><rect x="98.9916%" y="165" width="0.0122%" height="15" fill="rgb(238,224,15)" fg:x="16198" fg:w="2"/><text x="99.2416%" y="175.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.01%)</title><rect x="98.9916%" y="149" width="0.0122%" height="15" fill="rgb(241,136,10)" fg:x="16198" fg:w="2"/><text x="99.2416%" y="159.50"></text></g><g><title>rsm::handle_incoming::_{{closure}} (5 samples, 0.03%)</title><rect x="99.0100%" y="165" width="0.0306%" height="15" fill="rgb(208,32,45)" fg:x="16201" fg:w="5"/><text x="99.2600%" y="175.50"></text></g><g><title>rsm::mca_btl_rsm_component_progress::_{{closure}} (432 samples, 2.64%)</title><rect x="96.4126%" y="213" width="2.6401%" height="15" fill="rgb(207,135,9)" fg:x="15776" fg:w="432"/><text x="96.6626%" y="223.50">rs..</text></g><g><title>rsm::handle_incoming (17 samples, 0.10%)</title><rect x="98.9488%" y="197" width="0.1039%" height="15" fill="rgb(206,86,44)" fg:x="16191" fg:w="17"/><text x="99.1988%" y="207.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (8 samples, 0.05%)</title><rect x="99.0039%" y="181" width="0.0489%" height="15" fill="rgb(245,177,15)" fg:x="16200" fg:w="8"/><text x="99.2539%" y="191.50"></text></g><g><title>rsm::shared::SharedRegionHandle::get (2 samples, 0.01%)</title><rect x="99.0405%" y="165" width="0.0122%" height="15" fill="rgb(206,64,50)" fg:x="16206" fg:w="2"/><text x="99.2905%" y="175.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="99.0527%" y="197" width="0.0244%" height="15" fill="rgb(234,36,40)" fg:x="16208" fg:w="4"/><text x="99.3027%" y="207.50"></text></g><g><title>std::sync::poison::Flag::guard (4 samples, 0.02%)</title><rect x="99.0527%" y="181" width="0.0244%" height="15" fill="rgb(213,64,8)" fg:x="16208" fg:w="4"/><text x="99.3027%" y="191.50"></text></g><g><title>std::thread::panicking (4 samples, 0.02%)</title><rect x="99.0527%" y="165" width="0.0244%" height="15" fill="rgb(210,75,36)" fg:x="16208" fg:w="4"/><text x="99.3027%" y="175.50"></text></g><g><title>std::panicking::panicking (4 samples, 0.02%)</title><rect x="99.0527%" y="149" width="0.0244%" height="15" fill="rgb(229,88,21)" fg:x="16208" fg:w="4"/><text x="99.3027%" y="159.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (4 samples, 0.02%)</title><rect x="99.0527%" y="133" width="0.0244%" height="15" fill="rgb(252,204,47)" fg:x="16208" fg:w="4"/><text x="99.3027%" y="143.50"></text></g><g><title>mca_btl_rsm_component_progress (15,963 samples, 97.56%)</title><rect x="2.1451%" y="245" width="97.5555%" height="15" fill="rgb(208,77,27)" fg:x="351" fg:w="15963"/><text x="2.3951%" y="255.50">mca_btl_rsm_component_progress</text></g><g><title>rsm::local_data::lock (585 samples, 3.58%)</title><rect x="96.1254%" y="229" width="3.5751%" height="15" fill="rgb(221,76,26)" fg:x="15729" fg:w="585"/><text x="96.3754%" y="239.50">rsm:..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (106 samples, 0.65%)</title><rect x="99.0527%" y="213" width="0.6478%" height="15" fill="rgb(225,139,18)" fg:x="16208" fg:w="106"/><text x="99.3027%" y="223.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (102 samples, 0.62%)</title><rect x="99.0772%" y="197" width="0.6234%" height="15" fill="rgb(230,137,11)" fg:x="16212" fg:w="102"/><text x="99.3272%" y="207.50"></text></g><g><title>mca_part_persist_progress (2 samples, 0.01%)</title><rect x="99.7005%" y="245" width="0.0122%" height="15" fill="rgb(212,28,1)" fg:x="16314" fg:w="2"/><text x="99.9505%" y="255.50"></text></g><g><title>opal_progress (15,966 samples, 97.57%)</title><rect x="2.1451%" y="261" width="97.5738%" height="15" fill="rgb(248,164,17)" fg:x="351" fg:w="15966"/><text x="2.3951%" y="271.50">opal_progress</text></g><g><title>MPI_Waitall (15,975 samples, 97.63%)</title><rect x="2.0962%" y="293" width="97.6288%" height="15" fill="rgb(222,171,42)" fg:x="343" fg:w="15975"/><text x="2.3462%" y="303.50">MPI_Waitall</text></g><g><title>ompi_request_default_wait_all (15,975 samples, 97.63%)</title><rect x="2.0962%" y="277" width="97.6288%" height="15" fill="rgb(243,84,45)" fg:x="343" fg:w="15975"/><text x="2.3462%" y="287.50">ompi_request_default_wait_all</text></g><g><title>mca_pml_ob1_recv_frag_callback_match (2 samples, 0.01%)</title><rect x="99.7617%" y="213" width="0.0122%" height="15" fill="rgb(252,49,23)" fg:x="16324" fg:w="2"/><text x="100.0117%" y="223.50"></text></g><g><title>rsm::Handler::run (9 samples, 0.06%)</title><rect x="99.7494%" y="229" width="0.0550%" height="15" fill="rgb(215,19,7)" fg:x="16322" fg:w="9"/><text x="99.9994%" y="239.50"></text></g><g><title>rsm::local_data::lock (5 samples, 0.03%)</title><rect x="99.7739%" y="213" width="0.0306%" height="15" fill="rgb(238,81,41)" fg:x="16326" fg:w="5"/><text x="100.0239%" y="223.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.01%)</title><rect x="99.7922%" y="197" width="0.0122%" height="15" fill="rgb(210,199,37)" fg:x="16329" fg:w="2"/><text x="100.0422%" y="207.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (2 samples, 0.01%)</title><rect x="99.7922%" y="181" width="0.0122%" height="15" fill="rgb(244,192,49)" fg:x="16329" fg:w="2"/><text x="100.0422%" y="191.50"></text></g><g><title>rsm::mca_btl_rsm_component_progress::_{{closure}} (19 samples, 0.12%)</title><rect x="99.8105%" y="213" width="0.1161%" height="15" fill="rgb(226,211,11)" fg:x="16332" fg:w="19"/><text x="100.0605%" y="223.50"></text></g><g><title>rsm::fifo::FIFO::pop (19 samples, 0.12%)</title><rect x="99.8105%" y="197" width="0.1161%" height="15" fill="rgb(236,162,54)" fg:x="16332" fg:w="19"/><text x="100.0605%" y="207.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (18 samples, 0.11%)</title><rect x="99.8167%" y="181" width="0.1100%" height="15" fill="rgb(220,229,9)" fg:x="16333" fg:w="18"/><text x="100.0667%" y="191.50"></text></g><g><title>rsm::fifo::FIFO::pop::_{{closure}} (18 samples, 0.11%)</title><rect x="99.8167%" y="165" width="0.1100%" height="15" fill="rgb(250,87,22)" fg:x="16333" fg:w="18"/><text x="100.0667%" y="175.50"></text></g><g><title>core::sync::atomic::AtomicI64::load (12 samples, 0.07%)</title><rect x="99.8533%" y="149" width="0.0733%" height="15" fill="rgb(239,43,17)" fg:x="16339" fg:w="12"/><text x="100.1033%" y="159.50"></text></g><g><title>mca_btl_rsm_component_progress (34 samples, 0.21%)</title><rect x="99.7311%" y="245" width="0.2078%" height="15" fill="rgb(231,177,25)" fg:x="16319" fg:w="34"/><text x="99.9811%" y="255.50"></text></g><g><title>rsm::local_data::lock (22 samples, 0.13%)</title><rect x="99.8044%" y="229" width="0.1344%" height="15" fill="rgb(219,179,1)" fg:x="16331" fg:w="22"/><text x="100.0544%" y="239.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.01%)</title><rect x="99.9267%" y="213" width="0.0122%" height="15" fill="rgb(238,219,53)" fg:x="16351" fg:w="2"/><text x="100.1767%" y="223.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (2 samples, 0.01%)</title><rect x="99.9267%" y="197" width="0.0122%" height="15" fill="rgb(232,167,36)" fg:x="16351" fg:w="2"/><text x="100.1767%" y="207.50"></text></g><g><title>mca_part_persist_progress (3 samples, 0.02%)</title><rect x="99.9389%" y="245" width="0.0183%" height="15" fill="rgb(244,19,51)" fg:x="16353" fg:w="3"/><text x="100.1889%" y="255.50"></text></g><g><title>mca_pml_ob1_recv (39 samples, 0.24%)</title><rect x="99.7250%" y="277" width="0.2383%" height="15" fill="rgb(224,6,22)" fg:x="16318" fg:w="39"/><text x="99.9750%" y="287.50"></text></g><g><title>opal_progress (38 samples, 0.23%)</title><rect x="99.7311%" y="261" width="0.2322%" height="15" fill="rgb(224,145,5)" fg:x="16319" fg:w="38"/><text x="99.9811%" y="271.50"></text></g><g><title>PMPI_Recv (40 samples, 0.24%)</title><rect x="99.7250%" y="293" width="0.2445%" height="15" fill="rgb(234,130,49)" fg:x="16318" fg:w="40"/><text x="99.9750%" y="303.50"></text></g><g><title>mca_pml_base_select (2 samples, 0.01%)</title><rect x="99.9817%" y="213" width="0.0122%" height="15" fill="rgb(254,6,2)" fg:x="16360" fg:w="2"/><text x="100.2317%" y="223.50"></text></g><g><title>mca_pml_ob1_component_init (2 samples, 0.01%)</title><rect x="99.9817%" y="197" width="0.0122%" height="15" fill="rgb(208,96,46)" fg:x="16360" fg:w="2"/><text x="100.2317%" y="207.50"></text></g><g><title>mca_bml_base_init (2 samples, 0.01%)</title><rect x="99.9817%" y="181" width="0.0122%" height="15" fill="rgb(239,3,39)" fg:x="16360" fg:w="2"/><text x="100.2317%" y="191.50"></text></g><g><title>mca_bml_r2_component_init (2 samples, 0.01%)</title><rect x="99.9817%" y="165" width="0.0122%" height="15" fill="rgb(233,210,1)" fg:x="16360" fg:w="2"/><text x="100.2317%" y="175.50"></text></g><g><title>mca_btl_base_select (2 samples, 0.01%)</title><rect x="99.9817%" y="149" width="0.0122%" height="15" fill="rgb(244,137,37)" fg:x="16360" fg:w="2"/><text x="100.2317%" y="159.50"></text></g><g><title>mca_btl_rsm_component_init (2 samples, 0.01%)</title><rect x="99.9817%" y="133" width="0.0122%" height="15" fill="rgb(240,136,2)" fg:x="16360" fg:w="2"/><text x="100.2317%" y="143.50"></text></g><g><title>rsm::shared::SharedRegionHandle::create (2 samples, 0.01%)</title><rect x="99.9817%" y="117" width="0.0122%" height="15" fill="rgb(239,18,37)" fg:x="16360" fg:w="2"/><text x="100.2317%" y="127.50"></text></g><g><title>core::intrinsics::write_bytes (2 samples, 0.01%)</title><rect x="99.9817%" y="101" width="0.0122%" height="15" fill="rgb(218,185,22)" fg:x="16360" fg:w="2"/><text x="100.2317%" y="111.50"></text></g><g><title>[libc.so.6] (2 samples, 0.01%)</title><rect x="99.9817%" y="85" width="0.0122%" height="15" fill="rgb(225,218,4)" fg:x="16360" fg:w="2"/><text x="100.2317%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.9817%" y="69" width="0.0122%" height="15" fill="rgb(230,182,32)" fg:x="16360" fg:w="2"/><text x="100.2317%" y="79.50"></text></g><g><title>all (16,363 samples, 100%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(242,56,43)" fg:x="0" fg:w="16363"/><text x="0.2500%" y="399.50"></text></g><g><title>osu_bw (16,363 samples, 100.00%)</title><rect x="0.0000%" y="373" width="100.0000%" height="15" fill="rgb(233,99,24)" fg:x="0" fg:w="16363"/><text x="0.2500%" y="383.50">osu_bw</text></g><g><title>_start (16,341 samples, 99.87%)</title><rect x="0.1344%" y="357" width="99.8656%" height="15" fill="rgb(234,209,42)" fg:x="22" fg:w="16341"/><text x="0.3844%" y="367.50">_start</text></g><g><title>__libc_start_main (16,341 samples, 99.87%)</title><rect x="0.1344%" y="341" width="99.8656%" height="15" fill="rgb(227,7,12)" fg:x="22" fg:w="16341"/><text x="0.3844%" y="351.50">__libc_start_main</text></g><g><title>[libc.so.6] (16,341 samples, 99.87%)</title><rect x="0.1344%" y="325" width="99.8656%" height="15" fill="rgb(245,203,43)" fg:x="22" fg:w="16341"/><text x="0.3844%" y="335.50">[libc.so.6]</text></g><g><title>main (16,341 samples, 99.87%)</title><rect x="0.1344%" y="309" width="99.8656%" height="15" fill="rgb(238,205,33)" fg:x="22" fg:w="16341"/><text x="0.3844%" y="319.50">main</text></g><g><title>omb_mpi_init (3 samples, 0.02%)</title><rect x="99.9817%" y="293" width="0.0183%" height="15" fill="rgb(231,56,7)" fg:x="16360" fg:w="3"/><text x="100.2317%" y="303.50"></text></g><g><title>MPI_Init (3 samples, 0.02%)</title><rect x="99.9817%" y="277" width="0.0183%" height="15" fill="rgb(244,186,29)" fg:x="16360" fg:w="3"/><text x="100.2317%" y="287.50"></text></g><g><title>ompi_mpi_init (3 samples, 0.02%)</title><rect x="99.9817%" y="261" width="0.0183%" height="15" fill="rgb(234,111,31)" fg:x="16360" fg:w="3"/><text x="100.2317%" y="271.50"></text></g><g><title>ompi_mpi_instance_init (3 samples, 0.02%)</title><rect x="99.9817%" y="245" width="0.0183%" height="15" fill="rgb(241,149,10)" fg:x="16360" fg:w="3"/><text x="100.2317%" y="255.50"></text></g><g><title>ompi_mpi_instance_init_common (3 samples, 0.02%)</title><rect x="99.9817%" y="229" width="0.0183%" height="15" fill="rgb(249,206,44)" fg:x="16360" fg:w="3"/><text x="100.2317%" y="239.50"></text></g></svg></svg>