<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="454" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="437.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="437.00"> </text><svg id="frames" x="10" width="1180" total_samples="16548"><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.01%)</title><rect x="0.0181%" y="293" width="0.0121%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="2"/><text x="0.2681%" y="303.50"></text></g><g><title>[ld-linux-x86-64.so.2] (4 samples, 0.02%)</title><rect x="0.0121%" y="341" width="0.0242%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="4"/><text x="0.2621%" y="351.50"></text></g><g><title>[ld-linux-x86-64.so.2] (4 samples, 0.02%)</title><rect x="0.0121%" y="325" width="0.0242%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="4"/><text x="0.2621%" y="335.50"></text></g><g><title>[ld-linux-x86-64.so.2] (4 samples, 0.02%)</title><rect x="0.0121%" y="309" width="0.0242%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="4"/><text x="0.2621%" y="319.50"></text></g><g><title>[ld-linux-x86-64.so.2] (9 samples, 0.05%)</title><rect x="0.0000%" y="357" width="0.0544%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="9"/><text x="0.2500%" y="367.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="0.0363%" y="341" width="0.0181%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="3"/><text x="0.2863%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.0423%" y="325" width="0.0121%" height="15" fill="rgb(207,160,47)" fg:x="7" fg:w="2"/><text x="0.2923%" y="335.50"></text></g><g><title>[ld-linux-x86-64.so.2] (10 samples, 0.06%)</title><rect x="0.0000%" y="373" width="0.0604%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="10"/><text x="0.2500%" y="383.50"></text></g><g><title>[libpmix.so.2.9.2] (3 samples, 0.02%)</title><rect x="0.0665%" y="341" width="0.0181%" height="15" fill="rgb(218,30,26)" fg:x="11" fg:w="3"/><text x="0.3165%" y="351.50"></text></g><g><title>event_base_loop (3 samples, 0.02%)</title><rect x="0.0665%" y="325" width="0.0181%" height="15" fill="rgb(220,122,19)" fg:x="11" fg:w="3"/><text x="0.3165%" y="335.50"></text></g><g><title>[libevent_core-2.1.so.7.0.1] (2 samples, 0.01%)</title><rect x="0.0725%" y="309" width="0.0121%" height="15" fill="rgb(250,228,42)" fg:x="12" fg:w="2"/><text x="0.3225%" y="319.50"></text></g><g><title>[libc.so.6] (6 samples, 0.04%)</title><rect x="0.0604%" y="373" width="0.0363%" height="15" fill="rgb(240,193,28)" fg:x="10" fg:w="6"/><text x="0.3104%" y="383.50"></text></g><g><title>[libc.so.6] (6 samples, 0.04%)</title><rect x="0.0604%" y="357" width="0.0363%" height="15" fill="rgb(216,20,37)" fg:x="10" fg:w="6"/><text x="0.3104%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.0846%" y="341" width="0.0121%" height="15" fill="rgb(206,188,39)" fg:x="14" fg:w="2"/><text x="0.3346%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.0846%" y="325" width="0.0121%" height="15" fill="rgb(217,207,13)" fg:x="14" fg:w="2"/><text x="0.3346%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.0846%" y="309" width="0.0121%" height="15" fill="rgb(231,73,38)" fg:x="14" fg:w="2"/><text x="0.3346%" y="319.50"></text></g><g><title>allocate_memory_pt2pt_mul (3 samples, 0.02%)</title><rect x="0.1027%" y="309" width="0.0181%" height="15" fill="rgb(225,20,46)" fg:x="17" fg:w="3"/><text x="0.3527%" y="319.50"></text></g><g><title>[libc.so.6] (3 samples, 0.02%)</title><rect x="0.1027%" y="293" width="0.0181%" height="15" fill="rgb(210,31,41)" fg:x="17" fg:w="3"/><text x="0.3527%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.1088%" y="277" width="0.0121%" height="15" fill="rgb(221,200,47)" fg:x="18" fg:w="2"/><text x="0.3588%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicI64::swap (18 samples, 0.11%)</title><rect x="0.3807%" y="149" width="0.1088%" height="15" fill="rgb(226,26,5)" fg:x="63" fg:w="18"/><text x="0.6307%" y="159.50"></text></g><g><title>core::sync::atomic::atomic_swap (18 samples, 0.11%)</title><rect x="0.3807%" y="133" width="0.1088%" height="15" fill="rgb(249,33,26)" fg:x="63" fg:w="18"/><text x="0.6307%" y="143.50"></text></g><g><title>rsm::fifo::FIFO::push (28 samples, 0.17%)</title><rect x="0.3626%" y="197" width="0.1692%" height="15" fill="rgb(235,183,28)" fg:x="60" fg:w="28"/><text x="0.6126%" y="207.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (27 samples, 0.16%)</title><rect x="0.3686%" y="181" width="0.1632%" height="15" fill="rgb(221,5,38)" fg:x="61" fg:w="27"/><text x="0.6186%" y="191.50"></text></g><g><title>rsm::fifo::FIFO::push::_{{closure}} (27 samples, 0.16%)</title><rect x="0.3686%" y="165" width="0.1632%" height="15" fill="rgb(247,18,42)" fg:x="61" fg:w="27"/><text x="0.6186%" y="175.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (7 samples, 0.04%)</title><rect x="0.4895%" y="149" width="0.0423%" height="15" fill="rgb(241,131,45)" fg:x="81" fg:w="7"/><text x="0.7395%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (7 samples, 0.04%)</title><rect x="0.4895%" y="133" width="0.0423%" height="15" fill="rgb(249,31,29)" fg:x="81" fg:w="7"/><text x="0.7395%" y="143.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="0.5499%" y="149" width="0.0121%" height="15" fill="rgb(225,111,53)" fg:x="91" fg:w="2"/><text x="0.7999%" y="159.50"></text></g><g><title>[libc.so.6] (2 samples, 0.01%)</title><rect x="0.5499%" y="133" width="0.0121%" height="15" fill="rgb(238,160,17)" fg:x="91" fg:w="2"/><text x="0.7999%" y="143.50"></text></g><g><title>rsm::module::mca_btl_rsm_sendi::_{{closure}} (36 samples, 0.22%)</title><rect x="0.3565%" y="213" width="0.2175%" height="15" fill="rgb(214,148,48)" fg:x="59" fg:w="36"/><text x="0.6065%" y="223.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (7 samples, 0.04%)</title><rect x="0.5318%" y="197" width="0.0423%" height="15" fill="rgb(232,36,49)" fg:x="88" fg:w="7"/><text x="0.7818%" y="207.50"></text></g><g><title>rsm::module::mca_btl_rsm_sendi::_{{closure}}::_{{closure}} (6 samples, 0.04%)</title><rect x="0.5378%" y="181" width="0.0363%" height="15" fill="rgb(209,103,24)" fg:x="89" fg:w="6"/><text x="0.7878%" y="191.50"></text></g><g><title>rsm::shared::Block::fill (6 samples, 0.04%)</title><rect x="0.5378%" y="165" width="0.0363%" height="15" fill="rgb(229,88,8)" fg:x="89" fg:w="6"/><text x="0.7878%" y="175.50"></text></g><g><title>rsm::shared::convert_data (2 samples, 0.01%)</title><rect x="0.5620%" y="149" width="0.0121%" height="15" fill="rgb(213,181,19)" fg:x="93" fg:w="2"/><text x="0.8120%" y="159.50"></text></g><g><title>mca_btl_rsm_sendi (40 samples, 0.24%)</title><rect x="0.3445%" y="245" width="0.2417%" height="15" fill="rgb(254,191,54)" fg:x="57" fg:w="40"/><text x="0.5945%" y="255.50"></text></g><g><title>rsm::local_data::lock (39 samples, 0.24%)</title><rect x="0.3505%" y="229" width="0.2357%" height="15" fill="rgb(241,83,37)" fg:x="58" fg:w="39"/><text x="0.6005%" y="239.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.01%)</title><rect x="0.5741%" y="213" width="0.0121%" height="15" fill="rgb(233,36,39)" fg:x="95" fg:w="2"/><text x="0.8241%" y="223.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (2 samples, 0.01%)</title><rect x="0.5741%" y="197" width="0.0121%" height="15" fill="rgb(226,3,54)" fg:x="95" fg:w="2"/><text x="0.8241%" y="207.50"></text></g><g><title>mca_pml_ob1_send_inline.isra.0 (50 samples, 0.30%)</title><rect x="0.2901%" y="261" width="0.3022%" height="15" fill="rgb(245,192,40)" fg:x="48" fg:w="50"/><text x="0.5401%" y="271.50"></text></g><g><title>mca_pml_ob1_rdma_btls (2 samples, 0.01%)</title><rect x="0.6285%" y="245" width="0.0121%" height="15" fill="rgb(238,167,29)" fg:x="104" fg:w="2"/><text x="0.8785%" y="255.50"></text></g><g><title>rsm::shared::SharedRegionMap::init_descriptor (2 samples, 0.01%)</title><rect x="0.6587%" y="181" width="0.0121%" height="15" fill="rgb(232,182,51)" fg:x="109" fg:w="2"/><text x="0.9087%" y="191.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (2 samples, 0.01%)</title><rect x="0.6587%" y="165" width="0.0121%" height="15" fill="rgb(231,60,39)" fg:x="109" fg:w="2"/><text x="0.9087%" y="175.50"></text></g><g><title>rsm::shared::SharedRegionMap::init_descriptor::_{{closure}} (2 samples, 0.01%)</title><rect x="0.6587%" y="149" width="0.0121%" height="15" fill="rgb(208,69,12)" fg:x="109" fg:w="2"/><text x="0.9087%" y="159.50"></text></g><g><title>mca_btl_rsm_prepare_src (9 samples, 0.05%)</title><rect x="0.6587%" y="229" width="0.0544%" height="15" fill="rgb(235,93,37)" fg:x="109" fg:w="9"/><text x="0.9087%" y="239.50"></text></g><g><title>rsm::local_data::lock (9 samples, 0.05%)</title><rect x="0.6587%" y="213" width="0.0544%" height="15" fill="rgb(213,116,39)" fg:x="109" fg:w="9"/><text x="0.9087%" y="223.50"></text></g><g><title>rsm::module::mca_btl_rsm_prepare_src::_{{closure}} (9 samples, 0.05%)</title><rect x="0.6587%" y="197" width="0.0544%" height="15" fill="rgb(222,207,29)" fg:x="109" fg:w="9"/><text x="0.9087%" y="207.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (7 samples, 0.04%)</title><rect x="0.6708%" y="181" width="0.0423%" height="15" fill="rgb(206,96,30)" fg:x="111" fg:w="7"/><text x="0.9208%" y="191.50"></text></g><g><title>rsm::module::mca_btl_rsm_prepare_src::_{{closure}}::_{{closure}} (7 samples, 0.04%)</title><rect x="0.6708%" y="165" width="0.0423%" height="15" fill="rgb(218,138,4)" fg:x="111" fg:w="7"/><text x="0.9208%" y="175.50"></text></g><g><title>rsm::shared::Block::prepare_fill (7 samples, 0.04%)</title><rect x="0.6708%" y="149" width="0.0423%" height="15" fill="rgb(250,191,14)" fg:x="111" fg:w="7"/><text x="0.9208%" y="159.50"></text></g><g><title>rsm::shared::convert_data (7 samples, 0.04%)</title><rect x="0.6708%" y="133" width="0.0423%" height="15" fill="rgb(239,60,40)" fg:x="111" fg:w="7"/><text x="0.9208%" y="143.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.04%)</title><rect x="0.6708%" y="117" width="0.0423%" height="15" fill="rgb(206,27,48)" fg:x="111" fg:w="7"/><text x="0.9208%" y="127.50"></text></g><g><title>[libc.so.6] (6 samples, 0.04%)</title><rect x="0.6768%" y="101" width="0.0363%" height="15" fill="rgb(225,35,8)" fg:x="112" fg:w="6"/><text x="0.9268%" y="111.50"></text></g><g><title>rsm::module::mca_btl_rsm_send::_{{closure}} (3 samples, 0.02%)</title><rect x="0.7191%" y="197" width="0.0181%" height="15" fill="rgb(250,213,24)" fg:x="119" fg:w="3"/><text x="0.9691%" y="207.50"></text></g><g><title>rsm::fifo::FIFO::push (3 samples, 0.02%)</title><rect x="0.7191%" y="181" width="0.0181%" height="15" fill="rgb(247,123,22)" fg:x="119" fg:w="3"/><text x="0.9691%" y="191.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (2 samples, 0.01%)</title><rect x="0.7252%" y="165" width="0.0121%" height="15" fill="rgb(231,138,38)" fg:x="120" fg:w="2"/><text x="0.9752%" y="175.50"></text></g><g><title>rsm::fifo::FIFO::push::_{{closure}} (2 samples, 0.01%)</title><rect x="0.7252%" y="149" width="0.0121%" height="15" fill="rgb(231,145,46)" fg:x="120" fg:w="2"/><text x="0.9752%" y="159.50"></text></g><g><title>mca_pml_ob1_send_request_start_prepare (17 samples, 0.10%)</title><rect x="0.6406%" y="245" width="0.1027%" height="15" fill="rgb(251,118,11)" fg:x="106" fg:w="17"/><text x="0.8906%" y="255.50"></text></g><g><title>mca_btl_rsm_send (5 samples, 0.03%)</title><rect x="0.7131%" y="229" width="0.0302%" height="15" fill="rgb(217,147,25)" fg:x="118" fg:w="5"/><text x="0.9631%" y="239.50"></text></g><g><title>rsm::local_data::lock (4 samples, 0.02%)</title><rect x="0.7191%" y="213" width="0.0242%" height="15" fill="rgb(247,81,37)" fg:x="119" fg:w="4"/><text x="0.9691%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rsm::local_data::LocalData&gt;&gt; (3 samples, 0.02%)</title><rect x="0.8219%" y="197" width="0.0181%" height="15" fill="rgb(209,12,38)" fg:x="136" fg:w="3"/><text x="1.0719%" y="207.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="0.8219%" y="181" width="0.0181%" height="15" fill="rgb(227,1,9)" fg:x="136" fg:w="3"/><text x="1.0719%" y="191.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (3 samples, 0.02%)</title><rect x="0.8219%" y="165" width="0.0181%" height="15" fill="rgb(248,47,43)" fg:x="136" fg:w="3"/><text x="1.0719%" y="175.50"></text></g><g><title>rsm::shared::SharedRegionMap::init_descriptor (3 samples, 0.02%)</title><rect x="0.8581%" y="181" width="0.0181%" height="15" fill="rgb(221,10,30)" fg:x="142" fg:w="3"/><text x="1.1081%" y="191.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (2 samples, 0.01%)</title><rect x="0.8642%" y="165" width="0.0121%" height="15" fill="rgb(210,229,1)" fg:x="143" fg:w="2"/><text x="1.1142%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (71 samples, 0.43%)</title><rect x="0.9004%" y="117" width="0.4291%" height="15" fill="rgb(222,148,37)" fg:x="149" fg:w="71"/><text x="1.1504%" y="127.50"></text></g><g><title>[libc.so.6] (70 samples, 0.42%)</title><rect x="0.9065%" y="101" width="0.4230%" height="15" fill="rgb(234,67,33)" fg:x="150" fg:w="70"/><text x="1.1565%" y="111.50"></text></g><g><title>rsm::module::mca_btl_rsm_prepare_src::_{{closure}} (82 samples, 0.50%)</title><rect x="0.8400%" y="197" width="0.4955%" height="15" fill="rgb(247,98,35)" fg:x="139" fg:w="82"/><text x="1.0900%" y="207.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (76 samples, 0.46%)</title><rect x="0.8762%" y="181" width="0.4593%" height="15" fill="rgb(247,138,52)" fg:x="145" fg:w="76"/><text x="1.1262%" y="191.50"></text></g><g><title>rsm::module::mca_btl_rsm_prepare_src::_{{closure}}::_{{closure}} (76 samples, 0.46%)</title><rect x="0.8762%" y="165" width="0.4593%" height="15" fill="rgb(213,79,30)" fg:x="145" fg:w="76"/><text x="1.1262%" y="175.50"></text></g><g><title>rsm::shared::Block::prepare_fill (75 samples, 0.45%)</title><rect x="0.8823%" y="149" width="0.4532%" height="15" fill="rgb(246,177,23)" fg:x="146" fg:w="75"/><text x="1.1323%" y="159.50"></text></g><g><title>rsm::shared::convert_data (72 samples, 0.44%)</title><rect x="0.9004%" y="133" width="0.4351%" height="15" fill="rgb(230,62,27)" fg:x="149" fg:w="72"/><text x="1.1504%" y="143.50"></text></g><g><title>mca_btl_rsm_prepare_src (88 samples, 0.53%)</title><rect x="0.8098%" y="229" width="0.5318%" height="15" fill="rgb(216,154,8)" fg:x="134" fg:w="88"/><text x="1.0598%" y="239.50"></text></g><g><title>rsm::local_data::lock (87 samples, 0.53%)</title><rect x="0.8158%" y="213" width="0.5257%" height="15" fill="rgb(244,35,45)" fg:x="135" fg:w="87"/><text x="1.0658%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicI64::swap (14 samples, 0.08%)</title><rect x="1.3718%" y="133" width="0.0846%" height="15" fill="rgb(251,115,12)" fg:x="227" fg:w="14"/><text x="1.6218%" y="143.50"></text></g><g><title>core::sync::atomic::atomic_swap (14 samples, 0.08%)</title><rect x="1.3718%" y="117" width="0.0846%" height="15" fill="rgb(240,54,50)" fg:x="227" fg:w="14"/><text x="1.6218%" y="127.50"></text></g><g><title>mca_pml_ob1_send_request_start_seq.constprop.0 (145 samples, 0.88%)</title><rect x="0.5922%" y="261" width="0.8762%" height="15" fill="rgb(233,84,52)" fg:x="98" fg:w="145"/><text x="0.8422%" y="271.50"></text></g><g><title>mca_pml_ob1_send_request_start_rndv (120 samples, 0.73%)</title><rect x="0.7433%" y="245" width="0.7252%" height="15" fill="rgb(207,117,47)" fg:x="123" fg:w="120"/><text x="0.9933%" y="255.50"></text></g><g><title>mca_btl_rsm_send (21 samples, 0.13%)</title><rect x="1.3416%" y="229" width="0.1269%" height="15" fill="rgb(249,43,39)" fg:x="222" fg:w="21"/><text x="1.5916%" y="239.50"></text></g><g><title>rsm::local_data::lock (20 samples, 0.12%)</title><rect x="1.3476%" y="213" width="0.1209%" height="15" fill="rgb(209,38,44)" fg:x="223" fg:w="20"/><text x="1.5976%" y="223.50"></text></g><g><title>rsm::module::mca_btl_rsm_send::_{{closure}} (18 samples, 0.11%)</title><rect x="1.3597%" y="197" width="0.1088%" height="15" fill="rgb(236,212,23)" fg:x="225" fg:w="18"/><text x="1.6097%" y="207.50"></text></g><g><title>rsm::fifo::FIFO::push (18 samples, 0.11%)</title><rect x="1.3597%" y="181" width="0.1088%" height="15" fill="rgb(242,79,21)" fg:x="225" fg:w="18"/><text x="1.6097%" y="191.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (17 samples, 0.10%)</title><rect x="1.3657%" y="165" width="0.1027%" height="15" fill="rgb(211,96,35)" fg:x="226" fg:w="17"/><text x="1.6157%" y="175.50"></text></g><g><title>rsm::fifo::FIFO::push::_{{closure}} (17 samples, 0.10%)</title><rect x="1.3657%" y="149" width="0.1027%" height="15" fill="rgb(253,215,40)" fg:x="226" fg:w="17"/><text x="1.6157%" y="159.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (2 samples, 0.01%)</title><rect x="1.4564%" y="133" width="0.0121%" height="15" fill="rgb(211,81,21)" fg:x="241" fg:w="2"/><text x="1.7064%" y="143.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.01%)</title><rect x="1.4564%" y="117" width="0.0121%" height="15" fill="rgb(208,190,38)" fg:x="241" fg:w="2"/><text x="1.7064%" y="127.50"></text></g><g><title>MPI_Isend (225 samples, 1.36%)</title><rect x="0.1390%" y="293" width="1.3597%" height="15" fill="rgb(235,213,38)" fg:x="23" fg:w="225"/><text x="0.3890%" y="303.50"></text></g><g><title>mca_pml_ob1_isend (221 samples, 1.34%)</title><rect x="0.1632%" y="277" width="1.3355%" height="15" fill="rgb(237,122,38)" fg:x="27" fg:w="221"/><text x="0.4132%" y="287.50"></text></g><g><title>opal_convertor_prepare_for_send (5 samples, 0.03%)</title><rect x="1.4685%" y="261" width="0.0302%" height="15" fill="rgb(244,218,35)" fg:x="243" fg:w="5"/><text x="1.7185%" y="271.50"></text></g><g><title>mca_pml_ob1_send_request_free (7 samples, 0.04%)</title><rect x="1.5651%" y="261" width="0.0423%" height="15" fill="rgb(240,68,47)" fg:x="259" fg:w="7"/><text x="1.8151%" y="271.50"></text></g><g><title>core::ptr::read (5 samples, 0.03%)</title><rect x="2.3991%" y="181" width="0.0302%" height="15" fill="rgb(210,16,53)" fg:x="397" fg:w="5"/><text x="2.6491%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (33 samples, 0.20%)</title><rect x="2.3991%" y="213" width="0.1994%" height="15" fill="rgb(235,124,12)" fg:x="397" fg:w="33"/><text x="2.6491%" y="223.50"></text></g><g><title>core::mem::replace (33 samples, 0.20%)</title><rect x="2.3991%" y="197" width="0.1994%" height="15" fill="rgb(224,169,11)" fg:x="397" fg:w="33"/><text x="2.6491%" y="207.50"></text></g><g><title>core::ptr::write (28 samples, 0.17%)</title><rect x="2.4293%" y="181" width="0.1692%" height="15" fill="rgb(250,166,2)" fg:x="402" fg:w="28"/><text x="2.6793%" y="191.50"></text></g><g><title>core::cmp::PartialOrd::le (9 samples, 0.05%)</title><rect x="4.8767%" y="165" width="0.0544%" height="15" fill="rgb(242,216,29)" fg:x="807" fg:w="9"/><text x="5.1267%" y="175.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="4.9190%" y="149" width="0.0121%" height="15" fill="rgb(230,116,27)" fg:x="814" fg:w="2"/><text x="5.1690%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (2 samples, 0.01%)</title><rect x="4.9190%" y="133" width="0.0121%" height="15" fill="rgb(228,99,48)" fg:x="814" fg:w="2"/><text x="5.1690%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rsm::local_data::LocalData&gt;&gt; (37 samples, 0.22%)</title><rect x="5.0580%" y="149" width="0.2236%" height="15" fill="rgb(253,11,6)" fg:x="837" fg:w="37"/><text x="5.3080%" y="159.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.22%)</title><rect x="5.0580%" y="133" width="0.2236%" height="15" fill="rgb(247,143,39)" fg:x="837" fg:w="37"/><text x="5.3080%" y="143.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (37 samples, 0.22%)</title><rect x="5.0580%" y="117" width="0.2236%" height="15" fill="rgb(236,97,10)" fg:x="837" fg:w="37"/><text x="5.3080%" y="127.50"></text></g><g><title>rsm::block_store::BlockStore::alloc (2 samples, 0.01%)</title><rect x="5.4569%" y="133" width="0.0121%" height="15" fill="rgb(233,208,19)" fg:x="903" fg:w="2"/><text x="5.7069%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (2 samples, 0.01%)</title><rect x="5.4569%" y="117" width="0.0121%" height="15" fill="rgb(216,164,2)" fg:x="903" fg:w="2"/><text x="5.7069%" y="127.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (44 samples, 0.27%)</title><rect x="5.5415%" y="101" width="0.2659%" height="15" fill="rgb(220,129,5)" fg:x="917" fg:w="44"/><text x="5.7915%" y="111.50"></text></g><g><title>rsm::shared::SharedRegionHandle::get (7 samples, 0.04%)</title><rect x="5.8073%" y="101" width="0.0423%" height="15" fill="rgb(242,17,10)" fg:x="961" fg:w="7"/><text x="6.0573%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::as_mut (2 samples, 0.01%)</title><rect x="5.8376%" y="85" width="0.0121%" height="15" fill="rgb(242,107,0)" fg:x="966" fg:w="2"/><text x="6.0876%" y="95.50"></text></g><g><title>rsm::shared::SharedRegionMap::init_descriptor (126 samples, 0.76%)</title><rect x="5.4750%" y="133" width="0.7614%" height="15" fill="rgb(251,28,31)" fg:x="906" fg:w="126"/><text x="5.7250%" y="143.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (118 samples, 0.71%)</title><rect x="5.5233%" y="117" width="0.7131%" height="15" fill="rgb(233,223,10)" fg:x="914" fg:w="118"/><text x="5.7733%" y="127.50"></text></g><g><title>rsm::shared::SharedRegionMap::init_descriptor::_{{closure}} (64 samples, 0.39%)</title><rect x="5.8496%" y="101" width="0.3868%" height="15" fill="rgb(215,21,27)" fg:x="968" fg:w="64"/><text x="6.0996%" y="111.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (3 samples, 0.02%)</title><rect x="6.2364%" y="117" width="0.0181%" height="15" fill="rgb(232,23,21)" fg:x="1032" fg:w="3"/><text x="6.4864%" y="127.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (4 samples, 0.02%)</title><rect x="6.2545%" y="117" width="0.0242%" height="15" fill="rgb(244,5,23)" fg:x="1035" fg:w="4"/><text x="6.5045%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12,592 samples, 76.09%)</title><rect x="6.5265%" y="69" width="76.0938%" height="15" fill="rgb(226,81,46)" fg:x="1080" fg:w="12592"/><text x="6.7765%" y="79.50">core::intrinsics::copy_nonoverlapping</text></g><g><title>[libc.so.6] (12,585 samples, 76.05%)</title><rect x="6.5688%" y="53" width="76.0515%" height="15" fill="rgb(247,70,30)" fg:x="1087" fg:w="12585"/><text x="6.8188%" y="63.50">[libc.so.6]</text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="82.6021%" y="37" width="0.0181%" height="15" fill="rgb(212,68,19)" fg:x="13669" fg:w="3"/><text x="82.8521%" y="47.50"></text></g><g><title>core::ptr::null_mut (18 samples, 0.11%)</title><rect x="82.6203%" y="69" width="0.1088%" height="15" fill="rgb(240,187,13)" fg:x="13672" fg:w="18"/><text x="82.8703%" y="79.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (18 samples, 0.11%)</title><rect x="82.6203%" y="53" width="0.1088%" height="15" fill="rgb(223,113,26)" fg:x="13672" fg:w="18"/><text x="82.8703%" y="63.50"></text></g><g><title>opal_convertor_get_current_pointer_rs (14 samples, 0.08%)</title><rect x="82.7290%" y="69" width="0.0846%" height="15" fill="rgb(206,192,2)" fg:x="13690" fg:w="14"/><text x="82.9790%" y="79.50"></text></g><g><title>rsm::module::mca_btl_rsm_prepare_src::_{{closure}}::_{{closure}} (12,680 samples, 76.63%)</title><rect x="6.2787%" y="117" width="76.6256%" height="15" fill="rgb(241,108,4)" fg:x="1039" fg:w="12680"/><text x="6.5287%" y="127.50">rsm::module::mca_btl_rsm_prepare_src::_{{closure}}::_{{closure}}</text></g><g><title>rsm::shared::Block::prepare_fill (12,674 samples, 76.59%)</title><rect x="6.3150%" y="101" width="76.5893%" height="15" fill="rgb(247,173,49)" fg:x="1045" fg:w="12674"/><text x="6.5650%" y="111.50">rsm::shared::Block::prepare_fill</text></g><g><title>rsm::shared::convert_data (12,639 samples, 76.38%)</title><rect x="6.5265%" y="85" width="76.3778%" height="15" fill="rgb(224,114,35)" fg:x="1080" fg:w="12639"/><text x="6.7765%" y="95.50">rsm::shared::convert_data</text></g><g><title>opal_convertor_need_buffers_rs (15 samples, 0.09%)</title><rect x="82.8136%" y="69" width="0.0906%" height="15" fill="rgb(245,159,27)" fg:x="13704" fg:w="15"/><text x="83.0636%" y="79.50"></text></g><g><title>rsm::module::mca_btl_rsm_prepare_src::_{{closure}} (12,848 samples, 77.64%)</title><rect x="5.2816%" y="149" width="77.6408%" height="15" fill="rgb(245,172,44)" fg:x="874" fg:w="12848"/><text x="5.5316%" y="159.50">rsm::module::mca_btl_rsm_prepare_src::_{{closure}}</text></g><g><title>rsm::shared::SharedRegionMap::region_mut (12,690 samples, 76.69%)</title><rect x="6.2364%" y="133" width="76.6860%" height="15" fill="rgb(236,23,11)" fg:x="1032" fg:w="12690"/><text x="6.4864%" y="143.50">rsm::shared::SharedRegionMap::region_mut</text></g><g><title>rsm::shared::SharedRegionHandle::get (3 samples, 0.02%)</title><rect x="82.9043%" y="117" width="0.0181%" height="15" fill="rgb(205,117,38)" fg:x="13719" fg:w="3"/><text x="83.1543%" y="127.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="82.9224%" y="133" width="0.0242%" height="15" fill="rgb(237,72,25)" fg:x="13722" fg:w="4"/><text x="83.1724%" y="143.50"></text></g><g><title>std::sync::poison::Flag::guard (4 samples, 0.02%)</title><rect x="82.9224%" y="117" width="0.0242%" height="15" fill="rgb(244,70,9)" fg:x="13722" fg:w="4"/><text x="83.1724%" y="127.50"></text></g><g><title>std::thread::panicking (4 samples, 0.02%)</title><rect x="82.9224%" y="101" width="0.0242%" height="15" fill="rgb(217,125,39)" fg:x="13722" fg:w="4"/><text x="83.1724%" y="111.50"></text></g><g><title>std::panicking::panicking (4 samples, 0.02%)</title><rect x="82.9224%" y="85" width="0.0242%" height="15" fill="rgb(235,36,10)" fg:x="13722" fg:w="4"/><text x="83.1724%" y="95.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (4 samples, 0.02%)</title><rect x="82.9224%" y="69" width="0.0242%" height="15" fill="rgb(251,123,47)" fg:x="13722" fg:w="4"/><text x="83.1724%" y="79.50"></text></g><g><title>mca_btl_rsm_prepare_src (12,959 samples, 78.31%)</title><rect x="4.7498%" y="181" width="78.3116%" height="15" fill="rgb(221,13,13)" fg:x="786" fg:w="12959"/><text x="4.9998%" y="191.50">mca_btl_rsm_prepare_src</text></g><g><title>rsm::local_data::lock (12,929 samples, 78.13%)</title><rect x="4.9311%" y="165" width="78.1303%" height="15" fill="rgb(238,131,9)" fg:x="816" fg:w="12929"/><text x="5.1811%" y="175.50">rsm::local_data::lock</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (23 samples, 0.14%)</title><rect x="82.9224%" y="149" width="0.1390%" height="15" fill="rgb(211,50,8)" fg:x="13722" fg:w="23"/><text x="83.1724%" y="159.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (19 samples, 0.11%)</title><rect x="82.9466%" y="133" width="0.1148%" height="15" fill="rgb(245,182,24)" fg:x="13726" fg:w="19"/><text x="83.1966%" y="143.50"></text></g><g><title>core::cmp::PartialOrd::le (8 samples, 0.05%)</title><rect x="83.1943%" y="165" width="0.0483%" height="15" fill="rgb(242,14,37)" fg:x="13767" fg:w="8"/><text x="83.4443%" y="175.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (6 samples, 0.04%)</title><rect x="83.2064%" y="149" width="0.0363%" height="15" fill="rgb(246,228,12)" fg:x="13769" fg:w="6"/><text x="83.4564%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (6 samples, 0.04%)</title><rect x="83.2064%" y="133" width="0.0363%" height="15" fill="rgb(213,55,15)" fg:x="13769" fg:w="6"/><text x="83.4564%" y="143.50"></text></g><g><title>std::sync::poison::Flag::done (3 samples, 0.02%)</title><rect x="83.3212%" y="117" width="0.0181%" height="15" fill="rgb(209,9,3)" fg:x="13788" fg:w="3"/><text x="83.5712%" y="127.50"></text></g><g><title>std::thread::panicking (3 samples, 0.02%)</title><rect x="83.3212%" y="101" width="0.0181%" height="15" fill="rgb(230,59,30)" fg:x="13788" fg:w="3"/><text x="83.5712%" y="111.50"></text></g><g><title>std::panicking::panicking (3 samples, 0.02%)</title><rect x="83.3212%" y="85" width="0.0181%" height="15" fill="rgb(209,121,21)" fg:x="13788" fg:w="3"/><text x="83.5712%" y="95.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (3 samples, 0.02%)</title><rect x="83.3212%" y="69" width="0.0181%" height="15" fill="rgb(220,109,13)" fg:x="13788" fg:w="3"/><text x="83.5712%" y="79.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.01%)</title><rect x="83.3273%" y="53" width="0.0121%" height="15" fill="rgb(232,18,1)" fg:x="13789" fg:w="2"/><text x="83.5773%" y="63.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.01%)</title><rect x="83.3273%" y="37" width="0.0121%" height="15" fill="rgb(215,41,42)" fg:x="13789" fg:w="2"/><text x="83.5773%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rsm::local_data::LocalData&gt;&gt; (37 samples, 0.22%)</title><rect x="83.3212%" y="149" width="0.2236%" height="15" fill="rgb(224,123,36)" fg:x="13788" fg:w="37"/><text x="83.5712%" y="159.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.22%)</title><rect x="83.3212%" y="133" width="0.2236%" height="15" fill="rgb(240,125,3)" fg:x="13788" fg:w="37"/><text x="83.5712%" y="143.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (34 samples, 0.21%)</title><rect x="83.3394%" y="117" width="0.2055%" height="15" fill="rgb(205,98,50)" fg:x="13791" fg:w="34"/><text x="83.5894%" y="127.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (6 samples, 0.04%)</title><rect x="83.5992%" y="133" width="0.0363%" height="15" fill="rgb(205,185,37)" fg:x="13834" fg:w="6"/><text x="83.8492%" y="143.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (15 samples, 0.09%)</title><rect x="83.6899%" y="117" width="0.0906%" height="15" fill="rgb(238,207,15)" fg:x="13849" fg:w="15"/><text x="83.9399%" y="127.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (15 samples, 0.09%)</title><rect x="83.6899%" y="101" width="0.0906%" height="15" fill="rgb(213,199,42)" fg:x="13849" fg:w="15"/><text x="83.9399%" y="111.50"></text></g><g><title>core::cell::BorrowRefMut::new (15 samples, 0.09%)</title><rect x="83.6899%" y="85" width="0.0906%" height="15" fill="rgb(235,201,11)" fg:x="13849" fg:w="15"/><text x="83.9399%" y="95.50"></text></g><g><title>rsm::fifo::encode_rank_block_id (7 samples, 0.04%)</title><rect x="83.7805%" y="117" width="0.0423%" height="15" fill="rgb(207,46,11)" fg:x="13864" fg:w="7"/><text x="84.0305%" y="127.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (5 samples, 0.03%)</title><rect x="83.7926%" y="101" width="0.0302%" height="15" fill="rgb(241,35,35)" fg:x="13866" fg:w="5"/><text x="84.0426%" y="111.50"></text></g><g><title>&lt;T as core::convert::TryFrom&lt;U&gt;&gt;::try_from (5 samples, 0.03%)</title><rect x="83.7926%" y="85" width="0.0302%" height="15" fill="rgb(243,32,47)" fg:x="13866" fg:w="5"/><text x="84.0426%" y="95.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.03%)</title><rect x="83.7926%" y="69" width="0.0302%" height="15" fill="rgb(247,202,23)" fg:x="13866" fg:w="5"/><text x="84.0426%" y="79.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;i32&gt; for i64&gt;::from (5 samples, 0.03%)</title><rect x="83.7926%" y="53" width="0.0302%" height="15" fill="rgb(219,102,11)" fg:x="13866" fg:w="5"/><text x="84.0426%" y="63.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (35 samples, 0.21%)</title><rect x="83.8289%" y="101" width="0.2115%" height="15" fill="rgb(243,110,44)" fg:x="13872" fg:w="35"/><text x="84.0789%" y="111.50"></text></g><g><title>core::sync::atomic::AtomicI64::swap (359 samples, 2.17%)</title><rect x="84.2519%" y="85" width="2.1694%" height="15" fill="rgb(222,74,54)" fg:x="13942" fg:w="359"/><text x="84.5019%" y="95.50">c..</text></g><g><title>core::sync::atomic::atomic_swap (359 samples, 2.17%)</title><rect x="84.2519%" y="69" width="2.1694%" height="15" fill="rgb(216,99,12)" fg:x="13942" fg:w="359"/><text x="84.5019%" y="79.50">c..</text></g><g><title>rsm::fifo::extract_rank_block_id (4 samples, 0.02%)</title><rect x="86.4213%" y="85" width="0.0242%" height="15" fill="rgb(226,22,26)" fg:x="14301" fg:w="4"/><text x="86.6713%" y="95.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (4 samples, 0.02%)</title><rect x="86.4213%" y="69" width="0.0242%" height="15" fill="rgb(217,163,10)" fg:x="14301" fg:w="4"/><text x="86.6713%" y="79.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::TryFrom&lt;i64&gt; for i32&gt;::try_from (4 samples, 0.02%)</title><rect x="86.4213%" y="53" width="0.0242%" height="15" fill="rgb(213,25,53)" fg:x="14301" fg:w="4"/><text x="86.6713%" y="63.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (13 samples, 0.08%)</title><rect x="86.4455%" y="69" width="0.0786%" height="15" fill="rgb(252,105,26)" fg:x="14305" fg:w="13"/><text x="86.6955%" y="79.50"></text></g><g><title>rsm::fifo::FIFO::push::_{{closure}}::_{{closure}} (3 samples, 0.02%)</title><rect x="86.5241%" y="69" width="0.0181%" height="15" fill="rgb(220,39,43)" fg:x="14318" fg:w="3"/><text x="86.7741%" y="79.50"></text></g><g><title>rsm::fifo::FIFO::push::_{{closure}} (417 samples, 2.52%)</title><rect x="84.0404%" y="101" width="2.5199%" height="15" fill="rgb(229,68,48)" fg:x="13907" fg:w="417"/><text x="84.2904%" y="111.50">rs..</text></g><g><title>rsm::shared::SharedRegionMap::region_mut (19 samples, 0.11%)</title><rect x="86.4455%" y="85" width="0.1148%" height="15" fill="rgb(252,8,32)" fg:x="14305" fg:w="19"/><text x="86.6955%" y="95.50"></text></g><g><title>rsm::shared::SharedRegionHandle::get (3 samples, 0.02%)</title><rect x="86.5422%" y="69" width="0.0181%" height="15" fill="rgb(223,20,43)" fg:x="14321" fg:w="3"/><text x="86.7922%" y="79.50"></text></g><g><title>rsm::fifo::FIFO::push (493 samples, 2.98%)</title><rect x="83.6415%" y="133" width="2.9792%" height="15" fill="rgb(229,81,49)" fg:x="13841" fg:w="493"/><text x="83.8915%" y="143.50">rsm..</text></g><g><title>rsm::shared::SharedRegionMap::region_mut (463 samples, 2.80%)</title><rect x="83.8228%" y="117" width="2.7979%" height="15" fill="rgb(236,28,36)" fg:x="13871" fg:w="463"/><text x="84.0728%" y="127.50">rs..</text></g><g><title>rsm::shared::SharedRegionHandle::get (10 samples, 0.06%)</title><rect x="86.5603%" y="101" width="0.0604%" height="15" fill="rgb(249,185,26)" fg:x="14324" fg:w="10"/><text x="86.8103%" y="111.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.01%)</title><rect x="86.6087%" y="85" width="0.0121%" height="15" fill="rgb(249,174,33)" fg:x="14332" fg:w="2"/><text x="86.8587%" y="95.50"></text></g><g><title>rsm::proc_info::local_rank (2 samples, 0.01%)</title><rect x="86.6207%" y="133" width="0.0121%" height="15" fill="rgb(233,201,37)" fg:x="14334" fg:w="2"/><text x="86.8707%" y="143.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.02%)</title><rect x="86.6328%" y="117" width="0.0181%" height="15" fill="rgb(221,78,26)" fg:x="14336" fg:w="3"/><text x="86.8828%" y="127.50"></text></g><g><title>rsm::module::mca_btl_rsm_send::_{{closure}}::_{{closure}} (2 samples, 0.01%)</title><rect x="86.6510%" y="117" width="0.0121%" height="15" fill="rgb(250,127,30)" fg:x="14339" fg:w="2"/><text x="86.9010%" y="127.50"></text></g><g><title>rsm::module::mca_btl_rsm_send::_{{closure}} (519 samples, 3.14%)</title><rect x="83.5448%" y="149" width="3.1363%" height="15" fill="rgb(230,49,44)" fg:x="13825" fg:w="519"/><text x="83.7948%" y="159.50">rsm..</text></g><g><title>rsm::shared::SharedRegionMap::region_mut (8 samples, 0.05%)</title><rect x="86.6328%" y="133" width="0.0483%" height="15" fill="rgb(229,67,23)" fg:x="14336" fg:w="8"/><text x="86.8828%" y="143.50"></text></g><g><title>rsm::shared::SharedRegionHandle::get (3 samples, 0.02%)</title><rect x="86.6630%" y="117" width="0.0181%" height="15" fill="rgb(249,83,47)" fg:x="14341" fg:w="3"/><text x="86.9130%" y="127.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="86.6812%" y="133" width="0.0242%" height="15" fill="rgb(215,43,3)" fg:x="14344" fg:w="4"/><text x="86.9312%" y="143.50"></text></g><g><title>std::sync::poison::Flag::guard (4 samples, 0.02%)</title><rect x="86.6812%" y="117" width="0.0242%" height="15" fill="rgb(238,154,13)" fg:x="14344" fg:w="4"/><text x="86.9312%" y="127.50"></text></g><g><title>std::thread::panicking (4 samples, 0.02%)</title><rect x="86.6812%" y="101" width="0.0242%" height="15" fill="rgb(219,56,2)" fg:x="14344" fg:w="4"/><text x="86.9312%" y="111.50"></text></g><g><title>std::panicking::panicking (4 samples, 0.02%)</title><rect x="86.6812%" y="85" width="0.0242%" height="15" fill="rgb(233,0,4)" fg:x="14344" fg:w="4"/><text x="86.9312%" y="95.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (4 samples, 0.02%)</title><rect x="86.6812%" y="69" width="0.0242%" height="15" fill="rgb(235,30,7)" fg:x="14344" fg:w="4"/><text x="86.9312%" y="79.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.02%)</title><rect x="86.6872%" y="53" width="0.0181%" height="15" fill="rgb(250,79,13)" fg:x="14345" fg:w="3"/><text x="86.9372%" y="63.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="86.6872%" y="37" width="0.0181%" height="15" fill="rgb(211,146,34)" fg:x="14345" fg:w="3"/><text x="86.9372%" y="47.50"></text></g><g><title>mca_pml_ob1_send_request_schedule_once (13,807 samples, 83.44%)</title><rect x="3.4687%" y="197" width="83.4361%" height="15" fill="rgb(228,22,38)" fg:x="574" fg:w="13807"/><text x="3.7187%" y="207.50">mca_pml_ob1_send_request_schedule_once</text></g><g><title>mca_btl_rsm_send (636 samples, 3.84%)</title><rect x="83.0614%" y="181" width="3.8434%" height="15" fill="rgb(235,168,5)" fg:x="13745" fg:w="636"/><text x="83.3114%" y="191.50">mca_..</text></g><g><title>rsm::local_data::lock (605 samples, 3.66%)</title><rect x="83.2487%" y="165" width="3.6560%" height="15" fill="rgb(221,155,16)" fg:x="13776" fg:w="605"/><text x="83.4987%" y="175.50">rsm:..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (37 samples, 0.22%)</title><rect x="86.6812%" y="149" width="0.2236%" height="15" fill="rgb(215,215,53)" fg:x="14344" fg:w="37"/><text x="86.9312%" y="159.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (33 samples, 0.20%)</title><rect x="86.7053%" y="133" width="0.1994%" height="15" fill="rgb(223,4,10)" fg:x="14348" fg:w="33"/><text x="86.9553%" y="143.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (5 samples, 0.03%)</title><rect x="86.8745%" y="117" width="0.0302%" height="15" fill="rgb(234,103,6)" fg:x="14376" fg:w="5"/><text x="87.1245%" y="127.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.03%)</title><rect x="86.8745%" y="101" width="0.0302%" height="15" fill="rgb(227,97,0)" fg:x="14376" fg:w="5"/><text x="87.1245%" y="111.50"></text></g><g><title>mca_pml_ob1_send_request_schedule_once@plt (2 samples, 0.01%)</title><rect x="86.9048%" y="197" width="0.0121%" height="15" fill="rgb(234,150,53)" fg:x="14381" fg:w="2"/><text x="87.1548%" y="207.50"></text></g><g><title>mca_pml_ob1_frag_completion (13,954 samples, 84.32%)</title><rect x="2.5985%" y="213" width="84.3244%" height="15" fill="rgb(228,201,54)" fg:x="430" fg:w="13954"/><text x="2.8485%" y="223.50">mca_pml_ob1_frag_completion</text></g><g><title>mca_pml_ob1_send_request_copy_in_out (2 samples, 0.01%)</title><rect x="86.9410%" y="197" width="0.0121%" height="15" fill="rgb(222,22,37)" fg:x="14387" fg:w="2"/><text x="87.1910%" y="207.50"></text></g><g><title>std::sync::poison::Flag::done (2 samples, 0.01%)</title><rect x="87.0558%" y="117" width="0.0121%" height="15" fill="rgb(237,53,32)" fg:x="14406" fg:w="2"/><text x="87.3058%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rsm::local_data::LocalData&gt;&gt; (5 samples, 0.03%)</title><rect x="87.0558%" y="149" width="0.0302%" height="15" fill="rgb(233,25,53)" fg:x="14406" fg:w="5"/><text x="87.3058%" y="159.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="87.0558%" y="133" width="0.0302%" height="15" fill="rgb(210,40,34)" fg:x="14406" fg:w="5"/><text x="87.3058%" y="143.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (3 samples, 0.02%)</title><rect x="87.0679%" y="117" width="0.0181%" height="15" fill="rgb(241,220,44)" fg:x="14408" fg:w="3"/><text x="87.3179%" y="127.50"></text></g><g><title>rsm::shared::SharedRegionMap::init_descriptor (7 samples, 0.04%)</title><rect x="87.1042%" y="133" width="0.0423%" height="15" fill="rgb(235,28,35)" fg:x="14414" fg:w="7"/><text x="87.3542%" y="143.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (5 samples, 0.03%)</title><rect x="87.1163%" y="117" width="0.0302%" height="15" fill="rgb(210,56,17)" fg:x="14416" fg:w="5"/><text x="87.3663%" y="127.50"></text></g><g><title>rsm::shared::SharedRegionMap::init_descriptor::_{{closure}} (5 samples, 0.03%)</title><rect x="87.1163%" y="101" width="0.0302%" height="15" fill="rgb(224,130,29)" fg:x="14416" fg:w="5"/><text x="87.3663%" y="111.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,048 samples, 6.33%)</title><rect x="87.1525%" y="69" width="6.3331%" height="15" fill="rgb(235,212,8)" fg:x="14422" fg:w="1048"/><text x="87.4025%" y="79.50">core::in..</text></g><g><title>[libc.so.6] (1,048 samples, 6.33%)</title><rect x="87.1525%" y="53" width="6.3331%" height="15" fill="rgb(223,33,50)" fg:x="14422" fg:w="1048"/><text x="87.4025%" y="63.50">[libc.so..</text></g><g><title>core::ptr::null_mut (3 samples, 0.02%)</title><rect x="93.4856%" y="69" width="0.0181%" height="15" fill="rgb(219,149,13)" fg:x="15470" fg:w="3"/><text x="93.7356%" y="79.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.02%)</title><rect x="93.4856%" y="53" width="0.0181%" height="15" fill="rgb(250,156,29)" fg:x="15470" fg:w="3"/><text x="93.7356%" y="63.50"></text></g><g><title>opal_convertor_get_current_pointer_rs (2 samples, 0.01%)</title><rect x="93.5037%" y="69" width="0.0121%" height="15" fill="rgb(216,193,19)" fg:x="15473" fg:w="2"/><text x="93.7537%" y="79.50"></text></g><g><title>mca_btl_rsm_prepare_src (1,072 samples, 6.48%)</title><rect x="87.0498%" y="181" width="6.4781%" height="15" fill="rgb(216,135,14)" fg:x="14405" fg:w="1072"/><text x="87.2998%" y="191.50">mca_btl_..</text></g><g><title>rsm::local_data::lock (1,072 samples, 6.48%)</title><rect x="87.0498%" y="165" width="6.4781%" height="15" fill="rgb(241,47,5)" fg:x="14405" fg:w="1072"/><text x="87.2998%" y="175.50">rsm::loc..</text></g><g><title>rsm::module::mca_btl_rsm_prepare_src::_{{closure}} (1,066 samples, 6.44%)</title><rect x="87.0861%" y="149" width="6.4419%" height="15" fill="rgb(233,42,35)" fg:x="14411" fg:w="1066"/><text x="87.3361%" y="159.50">rsm::mod..</text></g><g><title>rsm::shared::SharedRegionMap::region_mut (1,056 samples, 6.38%)</title><rect x="87.1465%" y="133" width="6.3814%" height="15" fill="rgb(231,13,6)" fg:x="14421" fg:w="1056"/><text x="87.3965%" y="143.50">rsm::sha..</text></g><g><title>rsm::module::mca_btl_rsm_prepare_src::_{{closure}}::_{{closure}} (1,056 samples, 6.38%)</title><rect x="87.1465%" y="117" width="6.3814%" height="15" fill="rgb(207,181,40)" fg:x="14421" fg:w="1056"/><text x="87.3965%" y="127.50">rsm::mod..</text></g><g><title>rsm::shared::Block::prepare_fill (1,056 samples, 6.38%)</title><rect x="87.1465%" y="101" width="6.3814%" height="15" fill="rgb(254,173,49)" fg:x="14421" fg:w="1056"/><text x="87.3965%" y="111.50">rsm::sha..</text></g><g><title>rsm::shared::convert_data (1,055 samples, 6.38%)</title><rect x="87.1525%" y="85" width="6.3754%" height="15" fill="rgb(221,1,38)" fg:x="14422" fg:w="1055"/><text x="87.4025%" y="95.50">rsm::sha..</text></g><g><title>opal_convertor_need_buffers_rs (2 samples, 0.01%)</title><rect x="93.5158%" y="69" width="0.0121%" height="15" fill="rgb(206,124,46)" fg:x="15475" fg:w="2"/><text x="93.7658%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rsm::local_data::LocalData&gt;&gt; (5 samples, 0.03%)</title><rect x="93.5581%" y="149" width="0.0302%" height="15" fill="rgb(249,21,11)" fg:x="15482" fg:w="5"/><text x="93.8081%" y="159.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="93.5581%" y="133" width="0.0302%" height="15" fill="rgb(222,201,40)" fg:x="15482" fg:w="5"/><text x="93.8081%" y="143.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (5 samples, 0.03%)</title><rect x="93.5581%" y="117" width="0.0302%" height="15" fill="rgb(235,61,29)" fg:x="15482" fg:w="5"/><text x="93.8081%" y="127.50"></text></g><g><title>core::sync::atomic::AtomicI64::swap (39 samples, 0.24%)</title><rect x="93.6367%" y="85" width="0.2357%" height="15" fill="rgb(219,207,3)" fg:x="15495" fg:w="39"/><text x="93.8867%" y="95.50"></text></g><g><title>core::sync::atomic::atomic_swap (39 samples, 0.24%)</title><rect x="93.6367%" y="69" width="0.2357%" height="15" fill="rgb(222,56,46)" fg:x="15495" fg:w="39"/><text x="93.8867%" y="79.50"></text></g><g><title>rsm::module::mca_btl_rsm_send::_{{closure}} (50 samples, 0.30%)</title><rect x="93.5883%" y="149" width="0.3022%" height="15" fill="rgb(239,76,54)" fg:x="15487" fg:w="50"/><text x="93.8383%" y="159.50"></text></g><g><title>rsm::fifo::FIFO::push (47 samples, 0.28%)</title><rect x="93.6065%" y="133" width="0.2840%" height="15" fill="rgb(231,124,27)" fg:x="15490" fg:w="47"/><text x="93.8565%" y="143.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (46 samples, 0.28%)</title><rect x="93.6125%" y="117" width="0.2780%" height="15" fill="rgb(249,195,6)" fg:x="15491" fg:w="46"/><text x="93.8625%" y="127.50"></text></g><g><title>rsm::fifo::FIFO::push::_{{closure}} (46 samples, 0.28%)</title><rect x="93.6125%" y="101" width="0.2780%" height="15" fill="rgb(237,174,47)" fg:x="15491" fg:w="46"/><text x="93.8625%" y="111.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (2 samples, 0.01%)</title><rect x="93.8784%" y="85" width="0.0121%" height="15" fill="rgb(206,201,31)" fg:x="15535" fg:w="2"/><text x="94.1284%" y="95.50"></text></g><g><title>rsm::shared::SharedRegionHandle::get (2 samples, 0.01%)</title><rect x="93.8784%" y="69" width="0.0121%" height="15" fill="rgb(231,57,52)" fg:x="15535" fg:w="2"/><text x="94.1284%" y="79.50"></text></g><g><title>mca_pml_ob1_recv_frag_callback_ack (1,161 samples, 7.02%)</title><rect x="86.9229%" y="213" width="7.0160%" height="15" fill="rgb(248,177,22)" fg:x="14384" fg:w="1161"/><text x="87.1729%" y="223.50">mca_pml_o..</text></g><g><title>mca_pml_ob1_send_request_schedule_once (1,156 samples, 6.99%)</title><rect x="86.9531%" y="197" width="6.9857%" height="15" fill="rgb(215,211,37)" fg:x="14389" fg:w="1156"/><text x="87.2031%" y="207.50">mca_pml_o..</text></g><g><title>mca_btl_rsm_send (68 samples, 0.41%)</title><rect x="93.5279%" y="181" width="0.4109%" height="15" fill="rgb(241,128,51)" fg:x="15477" fg:w="68"/><text x="93.7779%" y="191.50"></text></g><g><title>rsm::local_data::lock (64 samples, 0.39%)</title><rect x="93.5521%" y="165" width="0.3868%" height="15" fill="rgb(227,165,31)" fg:x="15481" fg:w="64"/><text x="93.8021%" y="175.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (8 samples, 0.05%)</title><rect x="93.8905%" y="149" width="0.0483%" height="15" fill="rgb(228,167,24)" fg:x="15537" fg:w="8"/><text x="94.1405%" y="159.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (8 samples, 0.05%)</title><rect x="93.8905%" y="133" width="0.0483%" height="15" fill="rgb(228,143,12)" fg:x="15537" fg:w="8"/><text x="94.1405%" y="143.50"></text></g><g><title>mca_pml_ob1_recv_frag_callback_match (3 samples, 0.02%)</title><rect x="93.9388%" y="213" width="0.0181%" height="15" fill="rgb(249,149,8)" fg:x="15545" fg:w="3"/><text x="94.1888%" y="223.50"></text></g><g><title>mca_pml_ob1_rndv_completion (4 samples, 0.02%)</title><rect x="93.9570%" y="213" width="0.0242%" height="15" fill="rgb(243,35,44)" fg:x="15548" fg:w="4"/><text x="94.2070%" y="223.50"></text></g><g><title>core::cmp::PartialOrd::le (4 samples, 0.02%)</title><rect x="94.1201%" y="197" width="0.0242%" height="15" fill="rgb(246,89,9)" fg:x="15575" fg:w="4"/><text x="94.3701%" y="207.50"></text></g><g><title>std::sync::poison::Flag::done (11 samples, 0.07%)</title><rect x="94.1443%" y="165" width="0.0665%" height="15" fill="rgb(233,213,13)" fg:x="15579" fg:w="11"/><text x="94.3943%" y="175.50"></text></g><g><title>std::thread::panicking (6 samples, 0.04%)</title><rect x="94.1745%" y="149" width="0.0363%" height="15" fill="rgb(233,141,41)" fg:x="15584" fg:w="6"/><text x="94.4245%" y="159.50"></text></g><g><title>std::panicking::panicking (6 samples, 0.04%)</title><rect x="94.1745%" y="133" width="0.0363%" height="15" fill="rgb(239,167,4)" fg:x="15584" fg:w="6"/><text x="94.4245%" y="143.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (6 samples, 0.04%)</title><rect x="94.1745%" y="117" width="0.0363%" height="15" fill="rgb(209,217,16)" fg:x="15584" fg:w="6"/><text x="94.4245%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rsm::local_data::LocalData&gt;&gt; (88 samples, 0.53%)</title><rect x="94.1443%" y="197" width="0.5318%" height="15" fill="rgb(219,88,35)" fg:x="15579" fg:w="88"/><text x="94.3943%" y="207.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.53%)</title><rect x="94.1443%" y="181" width="0.5318%" height="15" fill="rgb(220,193,23)" fg:x="15579" fg:w="88"/><text x="94.3943%" y="191.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (77 samples, 0.47%)</title><rect x="94.2108%" y="165" width="0.4653%" height="15" fill="rgb(230,90,52)" fg:x="15590" fg:w="77"/><text x="94.4608%" y="175.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (2 samples, 0.01%)</title><rect x="94.6640%" y="149" width="0.0121%" height="15" fill="rgb(252,106,19)" fg:x="15665" fg:w="2"/><text x="94.9140%" y="159.50"></text></g><g><title>core::sync::atomic::atomic_swap (2 samples, 0.01%)</title><rect x="94.6640%" y="133" width="0.0121%" height="15" fill="rgb(206,74,20)" fg:x="15665" fg:w="2"/><text x="94.9140%" y="143.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (2 samples, 0.01%)</title><rect x="94.6761%" y="197" width="0.0121%" height="15" fill="rgb(230,138,44)" fg:x="15667" fg:w="2"/><text x="94.9261%" y="207.50"></text></g><g><title>log::max_level (3 samples, 0.02%)</title><rect x="94.6882%" y="197" width="0.0181%" height="15" fill="rgb(235,182,43)" fg:x="15669" fg:w="3"/><text x="94.9382%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.02%)</title><rect x="94.6882%" y="181" width="0.0181%" height="15" fill="rgb(242,16,51)" fg:x="15669" fg:w="3"/><text x="94.9382%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="94.6882%" y="165" width="0.0181%" height="15" fill="rgb(248,9,4)" fg:x="15669" fg:w="3"/><text x="94.9382%" y="175.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (5 samples, 0.03%)</title><rect x="94.7607%" y="181" width="0.0302%" height="15" fill="rgb(210,31,22)" fg:x="15681" fg:w="5"/><text x="95.0107%" y="191.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (5 samples, 0.03%)</title><rect x="94.7607%" y="165" width="0.0302%" height="15" fill="rgb(239,54,39)" fg:x="15681" fg:w="5"/><text x="95.0107%" y="175.50"></text></g><g><title>core::cell::BorrowRefMut::new (5 samples, 0.03%)</title><rect x="94.7607%" y="149" width="0.0302%" height="15" fill="rgb(230,99,41)" fg:x="15681" fg:w="5"/><text x="95.0107%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;rsm::shared::SharedRegionMap&gt;&gt; (6 samples, 0.04%)</title><rect x="94.7909%" y="181" width="0.0363%" height="15" fill="rgb(253,106,12)" fg:x="15686" fg:w="6"/><text x="95.0409%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (6 samples, 0.04%)</title><rect x="94.7909%" y="165" width="0.0363%" height="15" fill="rgb(213,46,41)" fg:x="15686" fg:w="6"/><text x="95.0409%" y="175.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (6 samples, 0.04%)</title><rect x="94.7909%" y="149" width="0.0363%" height="15" fill="rgb(215,133,35)" fg:x="15686" fg:w="6"/><text x="95.0409%" y="159.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (6 samples, 0.04%)</title><rect x="94.7909%" y="133" width="0.0363%" height="15" fill="rgb(213,28,5)" fg:x="15686" fg:w="6"/><text x="95.0409%" y="143.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.04%)</title><rect x="94.7909%" y="117" width="0.0363%" height="15" fill="rgb(215,77,49)" fg:x="15686" fg:w="6"/><text x="95.0409%" y="127.50"></text></g><g><title>core::mem::replace (6 samples, 0.04%)</title><rect x="94.7909%" y="101" width="0.0363%" height="15" fill="rgb(248,100,22)" fg:x="15686" fg:w="6"/><text x="95.0409%" y="111.50"></text></g><g><title>core::ptr::write (6 samples, 0.04%)</title><rect x="94.7909%" y="85" width="0.0363%" height="15" fill="rgb(208,67,9)" fg:x="15686" fg:w="6"/><text x="95.0409%" y="95.50"></text></g><g><title>rsm::block_store::BlockStore::free (5 samples, 0.03%)</title><rect x="94.8272%" y="181" width="0.0302%" height="15" fill="rgb(219,133,21)" fg:x="15692" fg:w="5"/><text x="95.0772%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.03%)</title><rect x="94.8272%" y="165" width="0.0302%" height="15" fill="rgb(246,46,29)" fg:x="15692" fg:w="5"/><text x="95.0772%" y="175.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (6 samples, 0.04%)</title><rect x="94.8574%" y="165" width="0.0363%" height="15" fill="rgb(246,185,52)" fg:x="15697" fg:w="6"/><text x="95.1074%" y="175.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (3 samples, 0.02%)</title><rect x="94.8997%" y="149" width="0.0181%" height="15" fill="rgb(252,136,11)" fg:x="15704" fg:w="3"/><text x="95.1497%" y="159.50"></text></g><g><title>core::convert::num::ptr_try_from_impls::&lt;impl core::convert::TryFrom&lt;i32&gt; for usize&gt;::try_from (3 samples, 0.02%)</title><rect x="94.8997%" y="133" width="0.0181%" height="15" fill="rgb(219,138,53)" fg:x="15704" fg:w="3"/><text x="95.1497%" y="143.50"></text></g><g><title>rsm::Handler::run::_{{closure}}::_{{closure}} (19 samples, 0.11%)</title><rect x="94.8936%" y="165" width="0.1148%" height="15" fill="rgb(211,51,23)" fg:x="15703" fg:w="19"/><text x="95.1436%" y="175.50"></text></g><g><title>core::sync::atomic::AtomicI64::store (15 samples, 0.09%)</title><rect x="94.9178%" y="149" width="0.0906%" height="15" fill="rgb(247,221,28)" fg:x="15707" fg:w="15"/><text x="95.1678%" y="159.50"></text></g><g><title>core::sync::atomic::atomic_store (15 samples, 0.09%)</title><rect x="94.9178%" y="133" width="0.0906%" height="15" fill="rgb(251,222,45)" fg:x="15707" fg:w="15"/><text x="95.1678%" y="143.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (26 samples, 0.16%)</title><rect x="94.8574%" y="181" width="0.1571%" height="15" fill="rgb(217,162,53)" fg:x="15697" fg:w="26"/><text x="95.1074%" y="191.50"></text></g><g><title>rsm::Handler::run::_{{closure}} (90 samples, 0.54%)</title><rect x="94.7063%" y="197" width="0.5439%" height="15" fill="rgb(229,93,14)" fg:x="15672" fg:w="90"/><text x="94.9563%" y="207.50"></text></g><g><title>rsm::shared::SharedRegionMap::reset_descriptor (39 samples, 0.24%)</title><rect x="95.0145%" y="181" width="0.2357%" height="15" fill="rgb(209,67,49)" fg:x="15723" fg:w="39"/><text x="95.2645%" y="191.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (11 samples, 0.07%)</title><rect x="95.2502%" y="181" width="0.0665%" height="15" fill="rgb(213,87,29)" fg:x="15762" fg:w="11"/><text x="95.5002%" y="191.50"></text></g><g><title>std::sync::poison::Flag::guard (11 samples, 0.07%)</title><rect x="95.2502%" y="165" width="0.0665%" height="15" fill="rgb(205,151,52)" fg:x="15762" fg:w="11"/><text x="95.5002%" y="175.50"></text></g><g><title>std::thread::panicking (11 samples, 0.07%)</title><rect x="95.2502%" y="149" width="0.0665%" height="15" fill="rgb(253,215,39)" fg:x="15762" fg:w="11"/><text x="95.5002%" y="159.50"></text></g><g><title>std::panicking::panicking (11 samples, 0.07%)</title><rect x="95.2502%" y="133" width="0.0665%" height="15" fill="rgb(221,220,41)" fg:x="15762" fg:w="11"/><text x="95.5002%" y="143.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (11 samples, 0.07%)</title><rect x="95.2502%" y="117" width="0.0665%" height="15" fill="rgb(218,133,21)" fg:x="15762" fg:w="11"/><text x="95.5002%" y="127.50"></text></g><g><title>rsm::Handler::run (15,530 samples, 93.85%)</title><rect x="2.2359%" y="229" width="93.8482%" height="15" fill="rgb(221,193,43)" fg:x="370" fg:w="15530"/><text x="2.4859%" y="239.50">rsm::Handler::run</text></g><g><title>rsm::local_data::lock (348 samples, 2.10%)</title><rect x="93.9811%" y="213" width="2.1030%" height="15" fill="rgb(240,128,52)" fg:x="15552" fg:w="348"/><text x="94.2311%" y="223.50">r..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (138 samples, 0.83%)</title><rect x="95.2502%" y="197" width="0.8339%" height="15" fill="rgb(253,114,12)" fg:x="15762" fg:w="138"/><text x="95.5002%" y="207.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (127 samples, 0.77%)</title><rect x="95.3167%" y="181" width="0.7675%" height="15" fill="rgb(215,223,47)" fg:x="15773" fg:w="127"/><text x="95.5667%" y="191.50"></text></g><g><title>std::sync::poison::Flag::done (3 samples, 0.02%)</title><rect x="96.1627%" y="181" width="0.0181%" height="15" fill="rgb(248,225,23)" fg:x="15913" fg:w="3"/><text x="96.4127%" y="191.50"></text></g><g><title>std::thread::panicking (3 samples, 0.02%)</title><rect x="96.1627%" y="165" width="0.0181%" height="15" fill="rgb(250,108,0)" fg:x="15913" fg:w="3"/><text x="96.4127%" y="175.50"></text></g><g><title>std::panicking::panicking (3 samples, 0.02%)</title><rect x="96.1627%" y="149" width="0.0181%" height="15" fill="rgb(228,208,7)" fg:x="15913" fg:w="3"/><text x="96.4127%" y="159.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (3 samples, 0.02%)</title><rect x="96.1627%" y="133" width="0.0181%" height="15" fill="rgb(244,45,10)" fg:x="15913" fg:w="3"/><text x="96.4127%" y="143.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.02%)</title><rect x="96.1627%" y="117" width="0.0181%" height="15" fill="rgb(207,125,25)" fg:x="15913" fg:w="3"/><text x="96.4127%" y="127.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="96.1627%" y="101" width="0.0181%" height="15" fill="rgb(210,195,18)" fg:x="15913" fg:w="3"/><text x="96.4127%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rsm::local_data::LocalData&gt;&gt; (25 samples, 0.15%)</title><rect x="96.1627%" y="213" width="0.1511%" height="15" fill="rgb(249,80,12)" fg:x="15913" fg:w="25"/><text x="96.4127%" y="223.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.15%)</title><rect x="96.1627%" y="197" width="0.1511%" height="15" fill="rgb(221,65,9)" fg:x="15913" fg:w="25"/><text x="96.4127%" y="207.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (22 samples, 0.13%)</title><rect x="96.1808%" y="181" width="0.1329%" height="15" fill="rgb(235,49,36)" fg:x="15916" fg:w="22"/><text x="96.4308%" y="191.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="96.3742%" y="181" width="0.0242%" height="15" fill="rgb(225,32,20)" fg:x="15948" fg:w="4"/><text x="96.6242%" y="191.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="96.3863%" y="165" width="0.0121%" height="15" fill="rgb(215,141,46)" fg:x="15950" fg:w="2"/><text x="96.6363%" y="175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (7 samples, 0.04%)</title><rect x="96.3742%" y="197" width="0.0423%" height="15" fill="rgb(250,160,47)" fg:x="15948" fg:w="7"/><text x="96.6242%" y="207.50"></text></g><g><title>rsm::mca_btl_rsm_component_progress::_{{closure}}::_{{closure}} (3 samples, 0.02%)</title><rect x="96.3984%" y="181" width="0.0181%" height="15" fill="rgb(216,222,40)" fg:x="15952" fg:w="3"/><text x="96.6484%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="96.4044%" y="165" width="0.0121%" height="15" fill="rgb(234,217,39)" fg:x="15953" fg:w="2"/><text x="96.6544%" y="175.50"></text></g><g><title>core::cmp::PartialOrd::le (6 samples, 0.04%)</title><rect x="96.4165%" y="197" width="0.0363%" height="15" fill="rgb(207,178,40)" fg:x="15955" fg:w="6"/><text x="96.6665%" y="207.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (6 samples, 0.04%)</title><rect x="96.4165%" y="181" width="0.0363%" height="15" fill="rgb(221,136,13)" fg:x="15955" fg:w="6"/><text x="96.6665%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (6 samples, 0.04%)</title><rect x="96.4165%" y="165" width="0.0363%" height="15" fill="rgb(249,199,10)" fg:x="15955" fg:w="6"/><text x="96.6665%" y="175.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (3 samples, 0.02%)</title><rect x="96.4527%" y="181" width="0.0181%" height="15" fill="rgb(249,222,13)" fg:x="15961" fg:w="3"/><text x="96.7027%" y="191.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (3 samples, 0.02%)</title><rect x="96.4527%" y="165" width="0.0181%" height="15" fill="rgb(244,185,38)" fg:x="15961" fg:w="3"/><text x="96.7027%" y="175.50"></text></g><g><title>core::cell::BorrowRefMut::new (3 samples, 0.02%)</title><rect x="96.4527%" y="149" width="0.0181%" height="15" fill="rgb(236,202,9)" fg:x="15961" fg:w="3"/><text x="96.7027%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (6 samples, 0.04%)</title><rect x="96.4709%" y="165" width="0.0363%" height="15" fill="rgb(250,229,37)" fg:x="15964" fg:w="6"/><text x="96.7209%" y="175.50"></text></g><g><title>core::sync::atomic::AtomicI64::load (200 samples, 1.21%)</title><rect x="97.5344%" y="149" width="1.2086%" height="15" fill="rgb(206,174,23)" fg:x="16140" fg:w="200"/><text x="97.7844%" y="159.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::TryFrom&lt;i64&gt; for i32&gt;::try_from (5 samples, 0.03%)</title><rect x="98.7431%" y="117" width="0.0302%" height="15" fill="rgb(211,33,43)" fg:x="16340" fg:w="5"/><text x="98.9931%" y="127.50"></text></g><g><title>rsm::fifo::extract_rank_block_id (6 samples, 0.04%)</title><rect x="98.7431%" y="149" width="0.0363%" height="15" fill="rgb(245,58,50)" fg:x="16340" fg:w="6"/><text x="98.9931%" y="159.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (6 samples, 0.04%)</title><rect x="98.7431%" y="133" width="0.0363%" height="15" fill="rgb(244,68,36)" fg:x="16340" fg:w="6"/><text x="98.9931%" y="143.50"></text></g><g><title>rsm::fifo::FIFO::pop::_{{closure}} (377 samples, 2.28%)</title><rect x="96.5071%" y="165" width="2.2782%" height="15" fill="rgb(232,229,15)" fg:x="15970" fg:w="377"/><text x="96.7571%" y="175.50">r..</text></g><g><title>rsm::fifo::FIFO::pop (388 samples, 2.34%)</title><rect x="96.4527%" y="197" width="2.3447%" height="15" fill="rgb(254,30,23)" fg:x="15961" fg:w="388"/><text x="96.7027%" y="207.50">r..</text></g><g><title>rsm::shared::SharedRegionMap::region_mut (385 samples, 2.33%)</title><rect x="96.4709%" y="181" width="2.3266%" height="15" fill="rgb(235,160,14)" fg:x="15964" fg:w="385"/><text x="96.7209%" y="191.50">r..</text></g><g><title>rsm::shared::SharedRegionHandle::get (2 samples, 0.01%)</title><rect x="98.7854%" y="165" width="0.0121%" height="15" fill="rgb(212,155,44)" fg:x="16347" fg:w="2"/><text x="99.0354%" y="175.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.01%)</title><rect x="98.7854%" y="149" width="0.0121%" height="15" fill="rgb(226,2,50)" fg:x="16347" fg:w="2"/><text x="99.0354%" y="159.50"></text></g><g><title>rsm::fifo::FIFO::push (8 samples, 0.05%)</title><rect x="98.7974%" y="197" width="0.0483%" height="15" fill="rgb(234,177,6)" fg:x="16349" fg:w="8"/><text x="99.0474%" y="207.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (7 samples, 0.04%)</title><rect x="98.8035%" y="181" width="0.0423%" height="15" fill="rgb(217,24,9)" fg:x="16350" fg:w="7"/><text x="99.0535%" y="191.50"></text></g><g><title>rsm::fifo::FIFO::push::_{{closure}} (7 samples, 0.04%)</title><rect x="98.8035%" y="165" width="0.0423%" height="15" fill="rgb(220,13,46)" fg:x="16350" fg:w="7"/><text x="99.0535%" y="175.50"></text></g><g><title>core::sync::atomic::AtomicI64::swap (3 samples, 0.02%)</title><rect x="98.8277%" y="149" width="0.0181%" height="15" fill="rgb(239,221,27)" fg:x="16354" fg:w="3"/><text x="99.0777%" y="159.50"></text></g><g><title>core::sync::atomic::atomic_swap (3 samples, 0.02%)</title><rect x="98.8277%" y="133" width="0.0181%" height="15" fill="rgb(222,198,25)" fg:x="16354" fg:w="3"/><text x="99.0777%" y="143.50"></text></g><g><title>rsm::handle_incoming::_{{closure}} (5 samples, 0.03%)</title><rect x="98.8700%" y="165" width="0.0302%" height="15" fill="rgb(211,99,13)" fg:x="16361" fg:w="5"/><text x="99.1200%" y="175.50"></text></g><g><title>rsm::mca_btl_rsm_component_progress::_{{closure}} (433 samples, 2.62%)</title><rect x="96.3198%" y="213" width="2.6166%" height="15" fill="rgb(232,111,31)" fg:x="15939" fg:w="433"/><text x="96.5698%" y="223.50">rs..</text></g><g><title>rsm::handle_incoming (15 samples, 0.09%)</title><rect x="98.8458%" y="197" width="0.0906%" height="15" fill="rgb(245,82,37)" fg:x="16357" fg:w="15"/><text x="99.0958%" y="207.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (12 samples, 0.07%)</title><rect x="98.8639%" y="181" width="0.0725%" height="15" fill="rgb(227,149,46)" fg:x="16360" fg:w="12"/><text x="99.1139%" y="191.50"></text></g><g><title>rsm::shared::SharedRegionHandle::get (6 samples, 0.04%)</title><rect x="98.9002%" y="165" width="0.0363%" height="15" fill="rgb(218,36,50)" fg:x="16366" fg:w="6"/><text x="99.1502%" y="175.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="98.9364%" y="197" width="0.0242%" height="15" fill="rgb(226,80,48)" fg:x="16372" fg:w="4"/><text x="99.1864%" y="207.50"></text></g><g><title>std::sync::poison::Flag::guard (4 samples, 0.02%)</title><rect x="98.9364%" y="181" width="0.0242%" height="15" fill="rgb(238,224,15)" fg:x="16372" fg:w="4"/><text x="99.1864%" y="191.50"></text></g><g><title>std::thread::panicking (4 samples, 0.02%)</title><rect x="98.9364%" y="165" width="0.0242%" height="15" fill="rgb(241,136,10)" fg:x="16372" fg:w="4"/><text x="99.1864%" y="175.50"></text></g><g><title>std::panicking::panicking (4 samples, 0.02%)</title><rect x="98.9364%" y="149" width="0.0242%" height="15" fill="rgb(208,32,45)" fg:x="16372" fg:w="4"/><text x="99.1864%" y="159.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (4 samples, 0.02%)</title><rect x="98.9364%" y="133" width="0.0242%" height="15" fill="rgb(207,135,9)" fg:x="16372" fg:w="4"/><text x="99.1864%" y="143.50"></text></g><g><title>mca_btl_rsm_component_progress (16,229 samples, 98.07%)</title><rect x="1.6074%" y="245" width="98.0723%" height="15" fill="rgb(206,86,44)" fg:x="266" fg:w="16229"/><text x="1.8574%" y="255.50">mca_btl_rsm_component_progress</text></g><g><title>rsm::local_data::lock (595 samples, 3.60%)</title><rect x="96.0841%" y="229" width="3.5956%" height="15" fill="rgb(245,177,15)" fg:x="15900" fg:w="595"/><text x="96.3341%" y="239.50">rsm:..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (123 samples, 0.74%)</title><rect x="98.9364%" y="213" width="0.7433%" height="15" fill="rgb(206,64,50)" fg:x="16372" fg:w="123"/><text x="99.1864%" y="223.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (119 samples, 0.72%)</title><rect x="98.9606%" y="197" width="0.7191%" height="15" fill="rgb(234,36,40)" fg:x="16376" fg:w="119"/><text x="99.2106%" y="207.50"></text></g><g><title>MPI_Waitall (16,248 samples, 98.19%)</title><rect x="1.4987%" y="293" width="98.1871%" height="15" fill="rgb(213,64,8)" fg:x="248" fg:w="16248"/><text x="1.7487%" y="303.50">MPI_Waitall</text></g><g><title>ompi_request_default_wait_all (16,245 samples, 98.17%)</title><rect x="1.5168%" y="277" width="98.1690%" height="15" fill="rgb(210,75,36)" fg:x="251" fg:w="16245"/><text x="1.7668%" y="287.50">ompi_request_default_wait_all</text></g><g><title>opal_progress (16,230 samples, 98.08%)</title><rect x="1.6074%" y="261" width="98.0783%" height="15" fill="rgb(229,88,21)" fg:x="266" fg:w="16230"/><text x="1.8574%" y="271.50">opal_progress</text></g><g><title>rsm::Handler::run::_{{closure}} (3 samples, 0.02%)</title><rect x="99.7401%" y="197" width="0.0181%" height="15" fill="rgb(252,204,47)" fg:x="16505" fg:w="3"/><text x="99.9901%" y="207.50"></text></g><g><title>rsm::shared::SharedRegionMap::reset_descriptor (2 samples, 0.01%)</title><rect x="99.7462%" y="181" width="0.0121%" height="15" fill="rgb(208,77,27)" fg:x="16506" fg:w="2"/><text x="99.9962%" y="191.50"></text></g><g><title>rsm::Handler::run (9 samples, 0.05%)</title><rect x="99.7220%" y="229" width="0.0544%" height="15" fill="rgb(221,76,26)" fg:x="16502" fg:w="9"/><text x="99.9720%" y="239.50"></text></g><g><title>rsm::local_data::lock (8 samples, 0.05%)</title><rect x="99.7281%" y="213" width="0.0483%" height="15" fill="rgb(225,139,18)" fg:x="16503" fg:w="8"/><text x="99.9781%" y="223.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.02%)</title><rect x="99.7583%" y="197" width="0.0181%" height="15" fill="rgb(230,137,11)" fg:x="16508" fg:w="3"/><text x="100.0083%" y="207.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (3 samples, 0.02%)</title><rect x="99.7583%" y="181" width="0.0181%" height="15" fill="rgb(212,28,1)" fg:x="16508" fg:w="3"/><text x="100.0083%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;rsm::local_data::LocalData&gt;&gt; (3 samples, 0.02%)</title><rect x="99.7764%" y="213" width="0.0181%" height="15" fill="rgb(248,164,17)" fg:x="16511" fg:w="3"/><text x="100.0264%" y="223.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="99.7764%" y="197" width="0.0181%" height="15" fill="rgb(222,171,42)" fg:x="16511" fg:w="3"/><text x="100.0264%" y="207.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (3 samples, 0.02%)</title><rect x="99.7764%" y="181" width="0.0181%" height="15" fill="rgb(243,84,45)" fg:x="16511" fg:w="3"/><text x="100.0264%" y="191.50"></text></g><g><title>rsm::fifo::FIFO::pop (13 samples, 0.08%)</title><rect x="99.7945%" y="197" width="0.0786%" height="15" fill="rgb(252,49,23)" fg:x="16514" fg:w="13"/><text x="100.0445%" y="207.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (12 samples, 0.07%)</title><rect x="99.8006%" y="181" width="0.0725%" height="15" fill="rgb(215,19,7)" fg:x="16515" fg:w="12"/><text x="100.0506%" y="191.50"></text></g><g><title>rsm::fifo::FIFO::pop::_{{closure}} (12 samples, 0.07%)</title><rect x="99.8006%" y="165" width="0.0725%" height="15" fill="rgb(238,81,41)" fg:x="16515" fg:w="12"/><text x="100.0506%" y="175.50"></text></g><g><title>core::sync::atomic::AtomicI64::load (9 samples, 0.05%)</title><rect x="99.8187%" y="149" width="0.0544%" height="15" fill="rgb(210,199,37)" fg:x="16518" fg:w="9"/><text x="100.0687%" y="159.50"></text></g><g><title>rsm::mca_btl_rsm_component_progress::_{{closure}} (15 samples, 0.09%)</title><rect x="99.7945%" y="213" width="0.0906%" height="15" fill="rgb(244,192,49)" fg:x="16514" fg:w="15"/><text x="100.0445%" y="223.50"></text></g><g><title>rsm::handle_incoming (2 samples, 0.01%)</title><rect x="99.8731%" y="197" width="0.0121%" height="15" fill="rgb(226,211,11)" fg:x="16527" fg:w="2"/><text x="100.1231%" y="207.50"></text></g><g><title>rsm::shared::SharedRegionMap::region_mut (2 samples, 0.01%)</title><rect x="99.8731%" y="181" width="0.0121%" height="15" fill="rgb(236,162,54)" fg:x="16527" fg:w="2"/><text x="100.1231%" y="191.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="99.8852%" y="197" width="0.0121%" height="15" fill="rgb(220,229,9)" fg:x="16529" fg:w="2"/><text x="100.1352%" y="207.50"></text></g><g><title>std::sync::poison::Flag::guard (2 samples, 0.01%)</title><rect x="99.8852%" y="181" width="0.0121%" height="15" fill="rgb(250,87,22)" fg:x="16529" fg:w="2"/><text x="100.1352%" y="191.50"></text></g><g><title>std::thread::panicking (2 samples, 0.01%)</title><rect x="99.8852%" y="165" width="0.0121%" height="15" fill="rgb(239,43,17)" fg:x="16529" fg:w="2"/><text x="100.1352%" y="175.50"></text></g><g><title>std::panicking::panicking (2 samples, 0.01%)</title><rect x="99.8852%" y="149" width="0.0121%" height="15" fill="rgb(231,177,25)" fg:x="16529" fg:w="2"/><text x="100.1352%" y="159.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (2 samples, 0.01%)</title><rect x="99.8852%" y="133" width="0.0121%" height="15" fill="rgb(219,179,1)" fg:x="16529" fg:w="2"/><text x="100.1352%" y="143.50"></text></g><g><title>mca_btl_rsm_component_progress (33 samples, 0.20%)</title><rect x="99.7039%" y="245" width="0.1994%" height="15" fill="rgb(238,219,53)" fg:x="16499" fg:w="33"/><text x="99.9539%" y="255.50"></text></g><g><title>rsm::local_data::lock (21 samples, 0.13%)</title><rect x="99.7764%" y="229" width="0.1269%" height="15" fill="rgb(232,167,36)" fg:x="16511" fg:w="21"/><text x="100.0264%" y="239.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.02%)</title><rect x="99.8852%" y="213" width="0.0181%" height="15" fill="rgb(244,19,51)" fg:x="16529" fg:w="3"/><text x="100.1352%" y="223.50"></text></g><g><title>mca_part_persist_progress (4 samples, 0.02%)</title><rect x="99.9033%" y="245" width="0.0242%" height="15" fill="rgb(224,6,22)" fg:x="16532" fg:w="4"/><text x="100.1533%" y="255.50"></text></g><g><title>PMPI_Recv (42 samples, 0.25%)</title><rect x="99.6858%" y="293" width="0.2538%" height="15" fill="rgb(224,145,5)" fg:x="16496" fg:w="42"/><text x="99.9358%" y="303.50"></text></g><g><title>mca_pml_ob1_recv (42 samples, 0.25%)</title><rect x="99.6858%" y="277" width="0.2538%" height="15" fill="rgb(234,130,49)" fg:x="16496" fg:w="42"/><text x="99.9358%" y="287.50"></text></g><g><title>opal_progress (40 samples, 0.24%)</title><rect x="99.6978%" y="261" width="0.2417%" height="15" fill="rgb(254,6,2)" fg:x="16498" fg:w="40"/><text x="99.9478%" y="271.50"></text></g><g><title>opal_progress_events.isra.0 (2 samples, 0.01%)</title><rect x="99.9275%" y="245" width="0.0121%" height="15" fill="rgb(208,96,46)" fg:x="16536" fg:w="2"/><text x="100.1775%" y="255.50"></text></g><g><title>opal_timer_linux_get_cycles_sys_timer (2 samples, 0.01%)</title><rect x="99.9275%" y="229" width="0.0121%" height="15" fill="rgb(239,3,39)" fg:x="16536" fg:w="2"/><text x="100.1775%" y="239.50"></text></g><g><title>calc_bw (16,520 samples, 99.83%)</title><rect x="0.1209%" y="309" width="99.8308%" height="15" fill="rgb(233,210,1)" fg:x="20" fg:w="16520"/><text x="0.3709%" y="319.50">calc_bw</text></g><g><title>mca_pml_base_select (4 samples, 0.02%)</title><rect x="99.9637%" y="229" width="0.0242%" height="15" fill="rgb(244,137,37)" fg:x="16542" fg:w="4"/><text x="100.2137%" y="239.50"></text></g><g><title>mca_pml_ob1_component_init (4 samples, 0.02%)</title><rect x="99.9637%" y="213" width="0.0242%" height="15" fill="rgb(240,136,2)" fg:x="16542" fg:w="4"/><text x="100.2137%" y="223.50"></text></g><g><title>mca_bml_base_init (4 samples, 0.02%)</title><rect x="99.9637%" y="197" width="0.0242%" height="15" fill="rgb(239,18,37)" fg:x="16542" fg:w="4"/><text x="100.2137%" y="207.50"></text></g><g><title>mca_bml_r2_component_init (4 samples, 0.02%)</title><rect x="99.9637%" y="181" width="0.0242%" height="15" fill="rgb(218,185,22)" fg:x="16542" fg:w="4"/><text x="100.2137%" y="191.50"></text></g><g><title>mca_btl_base_select (4 samples, 0.02%)</title><rect x="99.9637%" y="165" width="0.0242%" height="15" fill="rgb(225,218,4)" fg:x="16542" fg:w="4"/><text x="100.2137%" y="175.50"></text></g><g><title>mca_btl_rsm_component_init (4 samples, 0.02%)</title><rect x="99.9637%" y="149" width="0.0242%" height="15" fill="rgb(230,182,32)" fg:x="16542" fg:w="4"/><text x="100.2137%" y="159.50"></text></g><g><title>rsm::shared::SharedRegionHandle::create (4 samples, 0.02%)</title><rect x="99.9637%" y="133" width="0.0242%" height="15" fill="rgb(242,56,43)" fg:x="16542" fg:w="4"/><text x="100.2137%" y="143.50"></text></g><g><title>core::intrinsics::write_bytes (4 samples, 0.02%)</title><rect x="99.9637%" y="117" width="0.0242%" height="15" fill="rgb(233,99,24)" fg:x="16542" fg:w="4"/><text x="100.2137%" y="127.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="99.9637%" y="101" width="0.0242%" height="15" fill="rgb(234,209,42)" fg:x="16542" fg:w="4"/><text x="100.2137%" y="111.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="99.9637%" y="85" width="0.0242%" height="15" fill="rgb(227,7,12)" fg:x="16542" fg:w="4"/><text x="100.2137%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.9758%" y="69" width="0.0121%" height="15" fill="rgb(245,203,43)" fg:x="16544" fg:w="2"/><text x="100.2258%" y="79.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.9758%" y="53" width="0.0121%" height="15" fill="rgb(238,205,33)" fg:x="16544" fg:w="2"/><text x="100.2258%" y="63.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.9758%" y="37" width="0.0121%" height="15" fill="rgb(231,56,7)" fg:x="16544" fg:w="2"/><text x="100.2258%" y="47.50"></text></g><g><title>all (16,548 samples, 100%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(244,186,29)" fg:x="0" fg:w="16548"/><text x="0.2500%" y="415.50"></text></g><g><title>osu_mbw_mr (16,548 samples, 100.00%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(234,111,31)" fg:x="0" fg:w="16548"/><text x="0.2500%" y="399.50">osu_mbw_mr</text></g><g><title>_start (16,531 samples, 99.90%)</title><rect x="0.1027%" y="373" width="99.8973%" height="15" fill="rgb(241,149,10)" fg:x="17" fg:w="16531"/><text x="0.3527%" y="383.50">_start</text></g><g><title>__libc_start_main (16,531 samples, 99.90%)</title><rect x="0.1027%" y="357" width="99.8973%" height="15" fill="rgb(249,206,44)" fg:x="17" fg:w="16531"/><text x="0.3527%" y="367.50">__libc_start_main</text></g><g><title>[libc.so.6] (16,531 samples, 99.90%)</title><rect x="0.1027%" y="341" width="99.8973%" height="15" fill="rgb(251,153,30)" fg:x="17" fg:w="16531"/><text x="0.3527%" y="351.50">[libc.so.6]</text></g><g><title>main (16,531 samples, 99.90%)</title><rect x="0.1027%" y="325" width="99.8973%" height="15" fill="rgb(239,152,38)" fg:x="17" fg:w="16531"/><text x="0.3527%" y="335.50">main</text></g><g><title>omb_mpi_init (6 samples, 0.04%)</title><rect x="99.9637%" y="309" width="0.0363%" height="15" fill="rgb(249,139,47)" fg:x="16542" fg:w="6"/><text x="100.2137%" y="319.50"></text></g><g><title>MPI_Init (6 samples, 0.04%)</title><rect x="99.9637%" y="293" width="0.0363%" height="15" fill="rgb(244,64,35)" fg:x="16542" fg:w="6"/><text x="100.2137%" y="303.50"></text></g><g><title>ompi_mpi_init (6 samples, 0.04%)</title><rect x="99.9637%" y="277" width="0.0363%" height="15" fill="rgb(216,46,15)" fg:x="16542" fg:w="6"/><text x="100.2137%" y="287.50"></text></g><g><title>ompi_mpi_instance_init (6 samples, 0.04%)</title><rect x="99.9637%" y="261" width="0.0363%" height="15" fill="rgb(250,74,19)" fg:x="16542" fg:w="6"/><text x="100.2137%" y="271.50"></text></g><g><title>ompi_mpi_instance_init_common (6 samples, 0.04%)</title><rect x="99.9637%" y="245" width="0.0363%" height="15" fill="rgb(249,42,33)" fg:x="16542" fg:w="6"/><text x="100.2137%" y="255.50"></text></g><g><title>ompi_rte_init (2 samples, 0.01%)</title><rect x="99.9879%" y="229" width="0.0121%" height="15" fill="rgb(242,149,17)" fg:x="16546" fg:w="2"/><text x="100.2379%" y="239.50"></text></g><g><title>PMIx_Init (2 samples, 0.01%)</title><rect x="99.9879%" y="213" width="0.0121%" height="15" fill="rgb(244,29,21)" fg:x="16546" fg:w="2"/><text x="100.2379%" y="223.50"></text></g></svg></svg>